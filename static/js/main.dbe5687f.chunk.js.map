{"version":3,"sources":["../public/images sync /^/.//.*$","../public/images/areas/archway.png","../public/images/areas/conservatory.png","../public/images/areas/den.png","../public/images/areas/digsite.png","../public/images/areas/gully.png","../public/images/areas/tidepools.png","../public/images/fruits/cuberry.png","../public/images/fruits/mintMango.png","../public/images/fruits/mixedFruits.png","../public/images/fruits/pogofruit.png","../public/images/fruits/polaricherry.png","../public/images/fruits/pomegranite.png","../public/images/fruits/pricklePear.png","../public/images/meats/briarHen.png","../public/images/meats/candiedHen.png","../public/images/meats/henHen.png","../public/images/meats/mixedMeats.png","../public/images/meats/paintedHen.png","../public/images/meats/roostro.png","../public/images/meats/seaHen.png","../public/images/meats/stonyHen.png","../public/images/meats/thundercluck.png","../public/images/other/ash.png","../public/images/other/mixed.png","../public/images/other/moondewNectar.png","../public/images/other/none.png","../public/images/other/water.png","../public/images/placeholder.png","../public/images/plots/coop.png","../public/images/plots/corral.png","../public/images/plots/garden.png","../public/images/plots/incinerator.png","../public/images/plots/pond.png","../public/images/plots/silo.png","../public/images/slimes/angler.png","../public/images/slimes/batty.png","../public/images/slimes/boom.png","../public/images/slimes/cotton.png","../public/images/slimes/crystal.png","../public/images/slimes/dervish.png","../public/images/slimes/fire.png","../public/images/slimes/flutter.png","../public/images/slimes/honey.png","../public/images/slimes/hunter.png","../public/images/slimes/phosphor.png","../public/images/slimes/pink.png","../public/images/slimes/puddle.png","../public/images/slimes/ringtail.png","../public/images/slimes/rock.png","../public/images/slimes/saber.png","../public/images/slimes/sloomber.png","../public/images/slimes/tabby.png","../public/images/slimes/tangle.png","../public/images/slimes/twin.png","../public/images/slimes/yolky.png","../public/images/veggies/carrot.png","../public/images/veggies/heartBeat.png","../public/images/veggies/mixedVeggies.png","../public/images/veggies/oddOnion.png","../public/images/veggies/waterLettuce.png","components/layout/gully.png","components/layout/tidepools.png","components/layout/conservatory.png","components/layout/archway.png","components/layout/den.png","components/layout/digsite.png","mapOverview.png","components/util/ToggleColorMode.js","components/util/Help.js","components/layout/Header.js","components/layout/Footer.js","components/planning/Plot.js","components/planning/FreeRange.js","components/layout/Planner.js","components/util/FavFoods.js","SlimeRancher2Planner.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ToggleColorMode","_ref","mode","toggleColorMode","React","Box","sx","maxWidth","Button","variant","onClick","size","aria-label","minWidth","height","p","WbSunnyRoundedIcon","fontSize","ModeNightRoundedIcon","style","position","top","left","transform","width","bgcolor","border","boxShadow","Help","open","setOpen","useState","createElement","color","handleOpen","Modal","onClose","handleClose","aria-labelledby","aria-describedby","Typography","fontWeight","paddingLeft","Divider","Link","href","Header","Container","display","flexDirection","sm","alignItems","padding","gap","flexGrow","IconButton","alignSelf","GitHub","Footer","AnnouncementIcon","mb","paddingTop","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","plotTypes","name","image","corralSlimeTypes","coopTypes","fruitTypes","veggieTypes","incineratorSlimeTypes","pondSlimeTypes","Plot","plot","chosenPlotType","setChosenPlotType","chosenContent1","setChosenContent1","chosenContent2","setChosenContent2","contentOptions","setContentOptions","plotContentImages","undefined","CardMedia","component","alt","objectFit","require","concat","Card","CardActionArea","CardContent","justifyContent","Stack","spacing","FormControl","fullWidth","Select","displayEmpty","value","onChange","event","target","input","Input","MenuItem","plotType","key","Fragment","content","freeRangeeTypes","FreeRangePlanner","align","paddingBottom","background","plotName","plotsGully","plotsTidepools","plotsConservatory","plotsArchway","plotsDen","plotsDigsite","freeRange","areas","areaMap","Planner","Grid","container","item","xs","pb","marginRight","lineHeight","alignContent","FreeRange","rowsFruit","slime","slimeImage","food","foodImage","rowsVeggie","rowsMeat","rowsNoFav","FavFoods","TableContainer","Paper","Table","TableBody","row","TableRow","TableCell","srcSet","src","witdh","SlimeRancher2Planner","setMode","defaultTheme","createTheme","palette","ThemeProvider","theme","minHeight","CssBaseline","zIndex","backgroundColor","grey","prev","pt","pl","pr","margin","orientation","flexItem","py","px","mt","bottom","App","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+GAAA,IAAIA,EAAM,CACT,sBAAuB,IACvB,2BAA4B,IAC5B,kBAAmB,IACnB,sBAAuB,IACvB,oBAAqB,IACrB,wBAAyB,IACzB,uBAAwB,IACxB,yBAA0B,IAC1B,2BAA4B,IAC5B,yBAA0B,IAC1B,4BAA6B,IAC7B,2BAA4B,IAC5B,2BAA4B,IAC5B,uBAAwB,IACxB,yBAA0B,IAC1B,qBAAsB,IACtB,yBAA0B,IAC1B,yBAA0B,IAC1B,sBAAuB,IACvB,qBAAsB,IACtB,uBAAwB,IACxB,2BAA4B,IAC5B,kBAAmB,IACnB,oBAAqB,IACrB,4BAA6B,IAC7B,mBAAoB,IACpB,oBAAqB,IACrB,oBAAqB,IACrB,mBAAoB,IACpB,qBAAsB,IACtB,qBAAsB,IACtB,0BAA2B,IAC3B,mBAAoB,IACpB,mBAAoB,IACpB,sBAAuB,IACvB,qBAAsB,IACtB,oBAAqB,IACrB,sBAAuB,IACvB,uBAAwB,IACxB,uBAAwB,IACxB,oBAAqB,IACrB,uBAAwB,IACxB,qBAAsB,IACtB,sBAAuB,IACvB,wBAAyB,IACzB,oBAAqB,IACrB,sBAAuB,IACvB,wBAAyB,IACzB,oBAAqB,IACrB,qBAAsB,IACtB,wBAAyB,IACzB,qBAAsB,IACtB,sBAAuB,IACvB,oBAAqB,IACrB,qBAAsB,IACtB,uBAAwB,IACxB,0BAA2B,IAC3B,6BAA8B,IAC9B,yBAA0B,IAC1B,6BAA8B,KAI/B,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,wMCjFpBU,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,6KCkC5BC,MAzBf,SAAwBC,GAA6B,IAA5B,KAAEC,EAAI,gBAAEC,GAAiBF,EAChD,OACEG,gBAACC,IAAG,CAACC,GAAI,CAAEC,SAAU,SACnBH,gBAACI,IAAM,CACLC,QAAQ,OACRC,QAASP,EACTQ,KAAK,QACLC,aAAW,yBACXN,GAAI,CAAEO,SAAU,OAAQC,OAAQ,OAAQC,EAAG,QAEjC,SAATb,EACCE,gBAACY,IAAkB,CAACC,SAAS,UAE7Bb,gBAACc,IAAoB,CAACD,SAAS,a,sDCdzC,MAAME,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXZ,EAAG,GAGU,SAASa,IACtB,MAAOC,EAAMC,GAAW1B,IAAM2B,UAAS,GAUvC,OACE3B,IAAA4B,cAAA,WACE5B,IAAA4B,cAACxB,IAAM,CAACyB,MAAM,iBAAiBxB,QAAQ,QAAQC,QAVhCwB,KACjBJ,GAAQ,KAS8D,cAGpE1B,IAAA4B,cAACG,IAAK,CACJN,KAAMA,EACNO,QAXcC,KAClBP,GAAQ,IAWJQ,kBAAgB,qBAChBC,mBAAiB,4BAEjBnC,IAAA4B,cAAC3B,IAAG,CAACC,GAAIa,GACPf,IAAA4B,cAACQ,IAAU,CAAC/B,QAAQ,QAAQgC,WAAY,IAAMC,YAAa,GAAG,qFAG9DtC,IAAA4B,cAACW,IAAO,MACRvC,IAAA4B,cAAA,WACA5B,IAAA4B,cAACQ,IAAU,KAAC,oLAIZpC,IAAA4B,cAAA,WACA5B,IAAA4B,cAACQ,IAAU,KAAC,wFAC4E,IACtFpC,IAAA4B,cAACY,IAAI,CAACC,KAAK,gKAA+J,4BAEnK,QChDJ,SAASC,EAAM7C,GAA6B,IAA5B,KAAEC,EAAI,gBAAEC,GAAiBF,EACtD,OACEG,gBAAC2C,IAAS,KACR3C,gBAACC,IAAG,CACFC,GAAI,CACF0C,QAAS,OACTC,cAAe,CAAEC,GAAI,OACrB1B,MAAO,OACP2B,WAAY,SACZC,QAAS,EACTC,IAAK,IAGPjD,gBAACoC,IAAU,CAACc,SAAS,IAAI7C,QAAQ,KAAKgC,WAAY,KAAK,2BAIvDrC,gBAACwB,EAAI,MACLxB,gBAACoC,IAAU,CAACP,MAAM,iBAAiBxB,QAAQ,SAAQ,gBAGnDL,gBAACmD,IAAU,CACTtB,MAAM,UACNY,KAAK,2CACLjC,aAAW,SACXN,GAAI,CAAEkD,UAAW,WAEjBpD,gBAACqD,IAAM,OAETrD,gBAACJ,EAAe,CAACE,KAAMA,EAAMC,gBAAiBA,M,sBChCvC,SAASuD,IACtB,OACEtD,gBAAC2C,IAAS,KACR3C,gBAACC,IAAG,CACFC,GAAI,CACF0C,QAAS,OACTC,cAAe,CAAEC,GAAI,OACrB1B,MAAO,OACP2B,WAAY,WAGd/C,gBAACuD,IAAgB,MACjBvD,gBAAA,WACAA,gBAACoC,IAAU,CAAC/B,QAAQ,QAAQgC,WAAY,IAAKC,YAAa,GAAG,sFAK/DtC,gBAACoC,IAAU,CAAC/B,QAAQ,QAAQwB,MAAM,iBAAiB2B,GAAI,EAAGC,WAAY,GAAG,uL,qFCX/E,MAAM1C,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXZ,EAAG,GAKC+C,EAAY,CAChBC,WAAY,CACV5C,MAAO,CACL6C,UAAWC,IACXzC,MAAO,OAKP0C,EAAY,CAChB,CAAEC,KAAM,SAAUC,MAAO,oBACzB,CAAED,KAAM,OAAQC,MAAO,kBACvB,CAAED,KAAM,aAAcC,MAAO,oBAC7B,CAAED,KAAM,eAAgBC,MAAO,oBAC/B,CAAED,KAAM,cAAeC,MAAO,yBAC9B,CAAED,KAAM,OAAQC,MAAO,kBACvB,CAAED,KAAM,OAAQC,MAAO,kBACvB,CAAED,KAAM,QAASC,MAAO,oBAEpBC,EAAmB,CACvB,CAAEF,KAAM,eAAgBC,MAAO,qBAC/B,CAAED,KAAM,cAAeC,MAAO,oBAC9B,CAAED,KAAM,aAAcC,MAAO,mBAC7B,CAAED,KAAM,eAAgBC,MAAO,qBAC/B,CAAED,KAAM,gBAAiBC,MAAO,sBAChC,CAAED,KAAM,gBAAiBC,MAAO,sBAChC,CAAED,KAAM,gBAAiBC,MAAO,sBAChC,CAAED,KAAM,cAAeC,MAAO,oBAC9B,CAAED,KAAM,eAAgBC,MAAO,qBAC/B,CAAED,KAAM,iBAAkBC,MAAO,uBACjC,CAAED,KAAM,aAAcC,MAAO,mBAC7B,CAAED,KAAM,iBAAkBC,MAAO,uBACjC,CAAED,KAAM,aAAcC,MAAO,mBAC7B,CAAED,KAAM,cAAeC,MAAO,oBAC9B,CAAED,KAAM,iBAAkBC,MAAO,uBACjC,CAAED,KAAM,cAAeC,MAAO,oBAC9B,CAAED,KAAM,eAAgBC,MAAO,qBAC/B,CAAED,KAAM,aAAcC,MAAO,mBAC7B,CAAED,KAAM,cAAeC,MAAO,oBAC9B,CAAED,KAAM,OAAQC,MAAO,oBAEnBE,EAAY,CAChB,CAAEH,KAAM,YAAaC,MAAO,sBAC5B,CAAED,KAAM,cAAeC,MAAO,wBAC9B,CAAED,KAAM,UAAWC,MAAO,oBAC1B,CAAED,KAAM,cAAeC,MAAO,wBAC9B,CAAED,KAAM,UAAWC,MAAO,oBAC1B,CAAED,KAAM,YAAaC,MAAO,sBAC5B,CAAED,KAAM,eAAgBC,MAAO,0BAC/B,CAAED,KAAM,cAAeC,MAAO,wBAC9B,CAAED,KAAM,cAAeC,MAAO,oBAC9B,CAAED,KAAM,OAAQC,MAAO,oBAEnBG,EAAa,CACjB,CAAEJ,KAAM,UAAWC,MAAO,sBAC1B,CAAED,KAAM,aAAcC,MAAO,wBAC7B,CAAED,KAAM,YAAaC,MAAO,wBAC5B,CAAED,KAAM,cAAeC,MAAO,0BAC9B,CAAED,KAAM,eAAgBC,MAAO,2BAC/B,CAAED,KAAM,eAAgBC,MAAO,0BAC/B,CAAED,KAAM,OAAQC,MAAO,oBAEnBI,EAAc,CAClB,CAAEL,KAAM,SAAUC,MAAO,sBACzB,CAAED,KAAM,aAAcC,MAAO,yBAC7B,CAAED,KAAM,YAAaC,MAAO,wBAC5B,CAAED,KAAM,gBAAiBC,MAAO,4BAChC,CAAED,KAAM,OAAQC,MAAO,oBAEnBK,EAAwB,CAC5B,CAAEN,KAAM,OAAQC,MAAO,mBACvB,CAAED,KAAM,OAAQC,MAAO,oBAEnBM,EAAiB,CACrB,CAAEP,KAAM,SAAUC,MAAO,qBACzB,CAAED,KAAM,OAAQC,MAAO,oBAGV,SAASO,EAAI1E,GAAY,IAAX,KAAE2E,GAAM3E,EACnC,MAAO4B,EAAMC,GAAW1B,IAAM2B,UAAS,IAChC8C,EAAgBC,GAAqB1E,IAAM2B,SAAS,KACpDgD,EAAgBC,GAAqB5E,IAAM2B,SAAS,KACpDkD,EAAgBC,GAAqB9E,IAAM2B,SAAS,KACpDoD,EAAgBC,GAAqBhF,IAAM2B,SAAS,CAAC,qBAgD5D,IAAIsD,EAAoBjF,IAAA4B,cAAA,YAsFxB,OAvEIqD,OAZsBC,IAAxBT,EAAeV,MACS,KAAxBU,EAAeV,MACS,UAAxBU,EAAeV,UAGWmB,IAAxBP,EAAeZ,WACSmB,IAAxBL,EAAed,MACS,KAAxBY,EAAeZ,MACS,KAAxBc,EAAed,MACS,SAAxBY,EAAeZ,MACS,SAAxBc,EAAed,KAGb/D,IAAA4B,cAAC3B,IAAG,CACFC,GAAI,CACF0C,QAAS,OACTC,cAAe,QAGjB7C,IAAA4B,cAACuD,IAAS,CACRC,UAAU,MACVC,IAAKV,EAAeZ,KACpB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,WAC9CtB,MAAOuB,MAAQ,KAADC,OAA2Bb,EAAeX,UAE1DhE,IAAA4B,cAACuD,IAAS,CACRC,UAAU,MACVC,IAAKR,EAAed,KACpB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,WAC9CtB,MAAOuB,MAAQ,KAADC,OAA2BX,EAAeb,gBAKtCkB,IAAxBP,EAAeZ,MACS,KAAxBY,EAAeZ,MACS,SAAxBY,EAAeZ,KAGb/D,IAAA4B,cAACuD,IAAS,CACRC,UAAU,MACVC,IAAKV,EAAeZ,KACpB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,WAC9CtB,MAAOuB,MAAQ,KAADC,OAA2Bb,EAAeX,eAIpCkB,IAAxBL,EAAed,MACS,KAAxBc,EAAed,MACS,SAAxBc,EAAed,KAGb/D,IAAA4B,cAACuD,IAAS,CACRC,UAAU,MACVC,IAAKR,EAAed,KACpB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,WAC9CtB,MAAOuB,MAAQ,KAADC,OAA2BX,EAAeb,eAIpCkB,IAAxBT,EAAeV,WACUmB,IAAxBP,EAAeZ,MACU,KAAxBY,EAAeZ,MACS,SAAxBY,EAAeZ,WACQmB,IAAxBL,EAAed,MACU,KAAxBc,EAAed,MACS,SAAxBc,EAAed,KAWG/D,IAAA4B,cAAA,YARlB5B,IAAA4B,cAACuD,IAAS,CACRC,UAAU,MACVC,IAAKZ,EAAeV,KACpB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,WAC9CtB,MAAOuB,MAAQ,KAADC,OAA2Bf,EAAeT,UAO1ChE,IAAA4B,cAAA,YAIpB5B,IAAA4B,cAAA,WACE5B,IAAA4B,cAAC6D,IAAI,CACHvF,GAAI,CACFQ,OAAQ,OACRU,MAAO,OACPJ,SAAU,WACVE,KAAMsD,EAAKtD,KACXD,IAAKuD,EAAKvD,MAGZjB,IAAA4B,cAAC8D,IAAc,CACbpF,QAhJWwB,KACjBJ,GAAQ,IAgJFxB,GAAI,CACFQ,OAAQ,OACRU,MAAO,SAGTpB,IAAA4B,cAAC+D,IAAW,CACVzF,GAAI,CACFQ,OAAQ,OACRU,MAAO,OACPwB,QAAS,OACTC,cAAe,SACfG,QAAS,MACTD,WAAY,SACZ6C,eAAgB,WAGjBX,KAIPjF,IAAA4B,cAACG,IAAK,CACJN,KAAMA,EACNO,QAnKcC,KAClBP,GAAQ,IAmKJQ,kBAAgB,qBAChBC,mBAAiB,4BAEjBnC,IAAA4B,cAACiE,IAAK,CAACC,QAAS,EAAG5F,GAAIa,GACrBf,IAAA4B,cAACmE,IAAW,CAACC,WAAS,GACpBhG,IAAA4B,cAACqE,IAAM,CACLC,cAAY,EACZlH,GAAG,wBACHmH,MAAO1B,EACP2B,SAzKkBC,IAE5B,OADA3B,EAAkB2B,EAAMC,OAAOH,OACvBE,EAAMC,OAAOH,MAAMpC,MACzB,IAAK,SACHiB,EAAkBf,GAClB,MACF,IAAK,OACHe,EAAkBd,GAClB,MACF,IAAK,aACHc,EAAkBb,GAClB,MACF,IAAK,eACHa,EAAkBZ,GAClB,MACF,IAAK,OACHY,EAAkBV,GAClB,MACF,IAAK,cACHU,EAAkBX,GAClB,MACF,IAAK,OACHW,EAAkB,CAAC,sBACnB,MACF,IAAK,QACL,QACEA,EAAkB,CAAC,wBAgJbuB,MAAOvG,IAAA4B,cAAC4E,IAAK,MACb9C,UAAWA,GAEX1D,IAAA4B,cAAC6E,IAAQ,CAACN,MAAM,IACdnG,IAAA4B,cAAA,UAAI,cAELkC,EAAUjF,IAAK6H,GACd1G,IAAA4B,cAAC6E,IAAQ,CAACE,IAAKD,EAAS3C,KAAMoC,MAAOO,GAClCA,EAAS3C,cAKOmB,IAAxBT,EAAeV,MACU,KAAxBU,EAAeV,MACS,UAAxBU,EAAeV,MACS,SAAxBU,EAAeV,MACb/D,IAAA4B,cAAA5B,IAAA4G,SAAA,KACE5G,IAAA4B,cAACmE,IAAW,CAACC,WAAS,GACpBhG,IAAA4B,cAACqE,IAAM,CACLC,cAAY,EACZC,MAAOxB,EACPyB,SAlKYC,IAC5BzB,EAAkByB,EAAMC,OAAOH,QAkKfI,MAAOvG,IAAA4B,cAAC4E,IAAK,MACb9C,UAAWA,GAEX1D,IAAA4B,cAAC6E,IAAQ,CAACN,MAAM,IACdnG,IAAA4B,cAAA,UAAI,mBAELmD,EAAelG,IAAKgI,GACnB7G,IAAA4B,cAAC6E,IAAQ,CAACE,IAAKE,EAAQ9C,KAAMoC,MAAOU,GACjCA,EAAQ9C,UAKS,WAAxBU,EAAeV,MAA6C,SAAxBU,EAAeV,OACnD/D,IAAA4B,cAACmE,IAAW,CAACC,WAAS,GACpBhG,IAAA4B,cAACqE,IAAM,CACLC,cAAY,EACZC,MAAOtB,EACPuB,SAjLUC,IAC5BvB,EAAkBuB,EAAMC,OAAOH,QAiLbI,MAAOvG,IAAA4B,cAAC4E,IAAK,MACb9C,UAAWA,GAEX1D,IAAA4B,cAAC6E,IAAQ,CAACN,MAAM,IACdnG,IAAA4B,cAAA,UAAI,mBAELmD,EAAelG,IAAKgI,GACnB7G,IAAA4B,cAAC6E,IAAQ,CAACE,IAAKE,EAAQ9C,KAAMoC,MAAOU,GACjCA,EAAQ9C,aCtUnC,MAAMhD,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXZ,EAAG,GAKC+C,EAAY,CAChBC,WAAY,CACV5C,MAAO,CACL6C,UAAWC,IACXzC,MAAO,OAKP0F,EAAkB,CACtB,CAAE/C,KAAM,eAAgBC,MAAO,qBAC/B,CAAED,KAAM,cAAeC,MAAO,oBAC9B,CAAED,KAAM,aAAcC,MAAO,mBAC7B,CAAED,KAAM,eAAgBC,MAAO,qBAC/B,CAAED,KAAM,gBAAiBC,MAAO,sBAChC,CAAED,KAAM,gBAAiBC,MAAO,sBAChC,CAAED,KAAM,gBAAiBC,MAAO,sBAChC,CAAED,KAAM,cAAeC,MAAO,oBAC9B,CAAED,KAAM,eAAgBC,MAAO,qBAC/B,CAAED,KAAM,iBAAkBC,MAAO,uBACjC,CAAED,KAAM,aAAcC,MAAO,mBAC7B,CAAED,KAAM,iBAAkBC,MAAO,uBACjC,CAAED,KAAM,aAAcC,MAAO,mBAC7B,CAAED,KAAM,cAAeC,MAAO,oBAC9B,CAAED,KAAM,cAAeC,MAAO,oBAC9B,CAAED,KAAM,eAAgBC,MAAO,qBAC/B,CAAED,KAAM,cAAeC,MAAO,oBAC9B,CAAED,KAAM,YAAaC,MAAO,sBAC5B,CAAED,KAAM,UAAWC,MAAO,oBAC1B,CAAED,KAAM,cAAeC,MAAO,wBAC9B,CAAED,KAAM,UAAWC,MAAO,oBAC1B,CAAED,KAAM,YAAaC,MAAO,sBAC5B,CAAED,KAAM,eAAgBC,MAAO,0BAC/B,CAAED,KAAM,cAAeC,MAAO,wBAC9B,CAAED,KAAM,UAAWC,MAAO,sBAC1B,CAAED,KAAM,aAAcC,MAAO,wBAC7B,CAAED,KAAM,YAAaC,MAAO,wBAC5B,CAAED,KAAM,cAAeC,MAAO,0BAC9B,CAAED,KAAM,eAAgBC,MAAO,0BAC/B,CAAED,KAAM,eAAgBC,MAAO,0BAC/B,CAAED,KAAM,SAAUC,MAAO,sBACzB,CAAED,KAAM,aAAcC,MAAO,yBAC7B,CAAED,KAAM,YAAaC,MAAO,wBAC5B,CAAED,KAAM,gBAAiBC,MAAO,4BAChC,CAAED,KAAM,gBAAiBC,MAAO,4BAChC,CAAED,KAAM,OAAQC,MAAO,oBAGV,SAAS+C,EAAgBlH,GAAY,IAAX,KAAE2E,GAAM3E,EAC/C,MAAO4B,EAAMC,GAAW1B,IAAM2B,UAAS,IAChCgD,EAAgBC,GAAqB5E,IAAM2B,SAAS,KACpDkD,EAAgBC,GAAqB9E,IAAM2B,SAAS,IAiB3D,IAEIsD,EAAoBjF,IAAA4B,cAAA,YAsExB,OA5DEqD,OAPwBC,IAAxBP,EAAeZ,WACSmB,IAAxBL,EAAed,MACS,KAAxBY,EAAeZ,MACS,KAAxBc,EAAed,MACS,SAAxBY,EAAeZ,MACS,SAAxBc,EAAed,KAGb/D,IAAA4B,cAAC3B,IAAG,CACFC,GAAI,CACF0C,QAAS,OACTC,cAAe,QAGjB7C,IAAA4B,cAACuD,IAAS,CACRC,UAAU,MACVC,IAAKV,EAAeZ,KACpB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,WAC9CtB,MAAOuB,MAAQ,KAADC,OAA2Bb,EAAeX,UAE1DhE,IAAA4B,cAACuD,IAAS,CACRC,UAAU,MACVC,IAAKR,EAAed,KACpB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,WAC9CtB,MAAOuB,MAAQ,KAADC,OAA2BX,EAAeb,gBAKtCkB,IAAxBP,EAAeZ,MACS,KAAxBY,EAAeZ,MACS,SAAxBY,EAAeZ,KAGb/D,IAAA4B,cAACuD,IAAS,CACRC,UAAU,MACVC,IAAKV,EAAeZ,KACpB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,WAC9CtB,MAAOuB,MAAQ,KAADC,OAA2Bb,EAAeX,eAIpCkB,IAAxBL,EAAed,MACS,KAAxBc,EAAed,MACS,SAAxBc,EAAed,KAGb/D,IAAA4B,cAACuD,IAAS,CACRC,UAAU,MACVC,IAAKR,EAAed,KACpB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,WAC9CtB,MAAOuB,MAAQ,KAADC,OAA2BX,EAAeb,UAIxChE,IAAA4B,cAAA,WAClB5B,IAAA4B,cAACQ,IAAU,CACT/B,QAAQ,QACR2G,MAAM,SACN9G,GAAI,CACF+G,cAAe,MACfpG,SAAU,YAlEH,eAyEbb,IAAA4B,cAAA,WACE5B,IAAA4B,cAAC6D,IAAI,CACHvF,GAAI,CACFQ,OAAQ,OACRU,MAAO,OACPJ,SAAU,WACVE,KAAMsD,EAAKtD,KACXD,IAAKuD,EAAKvD,IACViG,WAAY,2BAGdlH,IAAA4B,cAAC8D,IAAc,CACbpF,QApGWwB,KACjBJ,GAAQ,IAoGFxB,GAAI,CACFQ,OAAQ,OACRU,MAAO,SAGTpB,IAAA4B,cAAC+D,IAAW,CACVzF,GAAI,CACFQ,OAAQ,OACRU,MAAO,OACPwB,QAAS,OACTC,cAAe,SACfG,QAAS,MACTD,WAAY,SACZ6C,eAAgB,WAGjBX,KAIPjF,IAAA4B,cAACG,IAAK,CACJN,KAAMA,EACNO,QAvHcC,KAClBP,GAAQ,IAuHJQ,kBAAgB,qBAChBC,mBAAiB,4BAEjBnC,IAAA4B,cAACiE,IAAK,CAACC,QAAS,EAAG5F,GAAIa,GACrBf,IAAA4B,cAACQ,IAAU,KAAC,QAAMoC,EAAK2C,UACvBnH,IAAA4B,cAACmE,IAAW,CAACC,WAAS,GACpBhG,IAAA4B,cAACqE,IAAM,CACLC,cAAY,EACZC,MAAOxB,EACPyB,SA7HkBC,IAC5BzB,EAAkByB,EAAMC,OAAOH,QA6HrBI,MAAOvG,IAAA4B,cAAC4E,IAAK,MACb9C,UAAWA,GAEX1D,IAAA4B,cAAC6E,IAAQ,CAACN,MAAM,IACdnG,IAAA4B,cAAA,UAAI,mBAELkF,EAAgBjI,IAAKgI,GACpB7G,IAAA4B,cAAC6E,IAAQ,CAACE,IAAKE,EAASV,MAAOU,GAC5BA,EAAQ9C,SAKjB/D,IAAA4B,cAACmE,IAAW,CAACC,WAAS,GACpBhG,IAAA4B,cAACqE,IAAM,CACLC,cAAY,EACZC,MAAOtB,EACPuB,SA3IkBC,IAC5BvB,EAAkBuB,EAAMC,OAAOH,QA2IrBI,MAAOvG,IAAA4B,cAAC4E,IAAK,MACb9C,UAAWA,GAEX1D,IAAA4B,cAAC6E,IAAQ,CAACN,MAAM,IACdnG,IAAA4B,cAAA,UAAI,mBAELkF,EAAgBjI,IAAKgI,GACpB7G,IAAA4B,cAAC6E,IAAQ,CAACE,IAAKE,EAASV,MAAOU,GAC5BA,EAAQ9C,Y,aCvO3B,MAAMqD,GAAa,CACjB,CAAEpI,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAGzBmG,GAAiB,CACrB,CAAErI,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAGzBoG,GAAoB,CACxB,CAAEtI,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,OAGzBqG,GAAe,CACnB,CAAEvI,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAGzBsG,GAAW,CACf,CAAExI,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,KAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,OAGzBuG,GAAe,CACnB,CAAEzI,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,MAC7B,CAAElC,GAAI,MAAOiC,IAAK,IAAKC,KAAM,OAGzBwG,GAAY,CAChB,CAAE1I,GAAI,OAAQiC,IAAK,IAAKC,KAAM,KAC9B,CAAElC,GAAI,OAAQiC,IAAK,IAAKC,KAAM,KAC9B,CAAElC,GAAI,OAAQiC,IAAK,IAAKC,KAAM,MAC9B,CAAElC,GAAI,OAAQiC,IAAK,IAAKC,KAAM,KAC9B,CAAElC,GAAI,OAAQiC,IAAK,IAAKC,KAAM,MAC9B,CAAElC,GAAI,OAAQiC,IAAK,IAAKC,KAAM,OAG1ByG,GAAQ,CACZ,CACE5D,KAAM,YACNC,MAAO,kBACP4D,QAAQ,cACR/F,MAAO,yBAET,CACEkC,KAAM,gBACNC,MAAO,sBACP4D,QAAQ,kBACR/F,MAAO,yBAET,CACEkC,KAAM,mBACNC,MAAO,yBACP4D,QAAQ,qBACR/F,MAAO,uBAET,CACEkC,KAAM,cACNC,MAAO,oBACP4D,QAAQ,gBACR/F,MAAO,0BAET,CACEkC,KAAM,UACNC,MAAO,gBACP4D,QAAQ,YACR/F,MAAO,0BAET,CACEkC,KAAM,cACNC,MAAO,oBACP4D,QAAQ,gBACR/F,MAAO,2BAII,SAASgG,KACtB,OACE7H,gBAAA,WACIA,gBAAA,WACEA,gBAAC8H,IAAI,CACHC,WAAS,EACTjC,QAAS,EACT5F,GAAI,CACFkB,MAAO,WAGTpB,gBAAC8H,IAAI,CAACE,MAAI,EAACC,GAAI,GACbjI,gBAACyF,IAAI,KACHzF,gBAAC2F,IAAW,CACVzF,GAAI,CACF0C,QAAS,OACTC,cAAe,SACfqE,WAAY,wBACZgB,GAAI,QAGRlI,gBAAC2C,IAAS,CAACzC,GAAI,CACX0C,QAAS,OACTC,cAAe,MACfqE,WAAY,0BAEdlH,gBAACmF,IAAS,CACRC,UAAU,MACVC,IAAKsC,GAAM,GAAG5D,KACd7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,UAAW6C,YAAa,QACtEnE,MAAOuB,MAAQ,KAADC,OAA2BmC,GAAM,GAAG3D,UAEpDhE,gBAACoC,IAAU,CACT/B,QAAQ,QACR2G,MAAM,SACN9G,GAAI,CACFgH,WAAY,0BACZlE,QAAS,MACToF,WAAY,EACZC,aAAc,SACdjH,MAAO,UAGRuG,GAAM,GAAG5D,OAGb/D,gBAACmF,IAAS,CACPC,UAAU,MACVC,IAAG,GAAAG,OAAKmC,GAAM,GAAG5D,KAAI,aACrB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,QAASkE,UAAW,UAAWlC,UAAW,UACrEY,MAAOuB,EAAQ,UAKvBvF,gBAAC8H,IAAI,CAACE,MAAI,EAACC,GAAI,GACbjI,gBAACyF,IAAI,KACHzF,gBAAC2F,IAAW,CACVzF,GAAI,CACF0C,QAAS,OACTC,cAAe,SACfqE,WAAY,0BAGAlH,gBAAC2C,IAAS,CAACzC,GAAI,CACX0C,QAAS,OACTC,cAAe,MACfqE,WAAY,0BAE9BlH,gBAACmF,IAAS,CACRC,UAAU,MACVC,IAAKsC,GAAM,GAAG5D,KACd7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,UAAW6C,YAAa,QACtEnE,MAAOuB,MAAQ,KAADC,OAA2BmC,GAAM,GAAG3D,UAEpDhE,gBAACoC,IAAU,CACT/B,QAAQ,QACR2G,MAAM,SACN9G,GAAI,CACFgH,WAAY,0BACZlE,QAAS,MACToF,WAAY,EACZC,aAAc,SACdjH,MAAO,UAGRuG,GAAM,GAAG5D,OAIK/D,gBAACmF,IAAS,CACPC,UAAU,MACVC,IAAG,GAAAG,OAAKmC,GAAM,GAAG5D,KAAI,aACrB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,QAASkE,UAAW,UAAW6C,YAAa,QACvEnE,MAAOuB,EAAQ,UAKzCvF,gBAAC8H,IAAI,CAACE,MAAI,EAACC,GAAI,GACbjI,gBAACyF,IAAI,KACHzF,gBAAC2F,IAAW,CACVzF,GAAI,CACF0C,QAAS,OACTC,cAAe,SACfqE,WAAY,wBAGDlH,gBAAC2C,IAAS,CAACzC,GAAI,CACV0C,QAAS,OACTC,cAAe,MACfqE,WAAY,wBAE9BlH,gBAACmF,IAAS,CACRC,UAAU,MACVC,IAAKsC,GAAM,GAAG5D,KACd7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,UAAW6C,YAAa,QACtEnE,MAAOuB,MAAQ,KAADC,OAA2BmC,GAAM,GAAG3D,UAEpDhE,gBAACoC,IAAU,CACT/B,QAAQ,QACR2G,MAAM,SACN9G,GAAI,CACFgH,WAAY,0BACZlE,QAAS,MACToF,WAAY,EACZC,aAAc,SACdjH,MAAO,UAGRuG,GAAM,GAAG5D,OAGK/D,gBAACmF,IAAS,CACPC,UAAU,MACVC,IAAG,GAAAG,OAAKmC,GAAM,GAAG5D,KAAI,aACrB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,QAASkE,UAAW,UAAW6C,YAAa,QACvEnE,MAAOuB,EAAQ,UAKzCvF,gBAAC8H,IAAI,CAACE,MAAI,EAACC,GAAI,GACbjI,gBAACyF,IAAI,KACHzF,gBAAC2F,IAAW,CACVzF,GAAI,CACF0C,QAAS,OACTC,cAAe,SACfqE,WAAY,2BAGAlH,gBAAC2C,IAAS,CAACzC,GAAI,CACX0C,QAAS,OACTC,cAAe,MACfqE,WAAY,2BAE9BlH,gBAACmF,IAAS,CACRC,UAAU,MACVC,IAAKsC,GAAM,GAAG5D,KACd7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,UAAW6C,YAAa,QACtEnE,MAAOuB,MAAQ,KAADC,OAA2BmC,GAAM,GAAG3D,UAEpDhE,gBAACoC,IAAU,CACT/B,QAAQ,QACR2G,MAAM,SACN9G,GAAI,CACFgH,WAAY,0BACZlE,QAAS,MACToF,WAAY,EACZC,aAAc,SACdjH,MAAO,UAGRuG,GAAM,GAAG5D,OAGK/D,gBAACmF,IAAS,CACPC,UAAU,MACVC,IAAG,GAAAG,OAAKmC,GAAM,GAAG5D,KAAI,aACrB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,QAASkE,UAAW,UAAW6C,YAAa,QACvEnE,MAAOuB,EAAQ,UAKzCvF,gBAAC8H,IAAI,CAACE,MAAI,EAACC,GAAI,GACbjI,gBAACyF,IAAI,KACHzF,gBAAC2F,IAAW,CACVzF,GAAI,CACF0C,QAAS,OACTC,cAAe,SACfqE,WAAY,2BAGAlH,gBAAC2C,IAAS,CAACzC,GAAI,CACX0C,QAAS,OACTC,cAAe,MACfqE,WAAY,2BAE9BlH,gBAACmF,IAAS,CACRC,UAAU,MACVC,IAAKsC,GAAM,GAAG5D,KACd7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,UAAW6C,YAAa,QACtEnE,MAAOuB,MAAQ,KAADC,OAA2BmC,GAAM,GAAG3D,UAEpDhE,gBAACoC,IAAU,CACT/B,QAAQ,QACR2G,MAAM,SACN9G,GAAI,CACFgH,WAAY,0BACZlE,QAAS,MACToF,WAAY,EACZC,aAAc,SACdjH,MAAO,UAGRuG,GAAM,GAAG5D,OAGK/D,gBAACmF,IAAS,CACPC,UAAU,MACVC,IAAG,GAAAG,OAAKmC,GAAM,GAAG5D,KAAI,aACrB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,QAASkE,UAAW,UAAW6C,YAAa,QACvEnE,MAAOuB,EAAQ,UAKzCvF,gBAAC8H,IAAI,CAACE,MAAI,EAACC,GAAI,GACbjI,gBAACyF,IAAI,KACHzF,gBAAC2F,IAAW,CACVzF,GAAI,CACF0C,QAAS,OACTC,cAAe,SACfqE,WAAY,2BAGAlH,gBAAC2C,IAAS,CAACzC,GAAI,CACX0C,QAAS,OACTC,cAAe,MACfqE,WAAY,2BAE9BlH,gBAACmF,IAAS,CACRC,UAAU,MACVC,IAAKsC,GAAM,GAAG5D,KACd7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,OAAQkE,UAAW,UAAW6C,YAAa,QACtEnE,MAAOuB,MAAQ,KAADC,OAA2BmC,GAAM,GAAG3D,UAEpDhE,gBAACoC,IAAU,CACT/B,QAAQ,QACR2G,MAAM,SACN9G,GAAI,CACFgH,WAAY,0BACZlE,QAAS,MACToF,WAAY,EACZC,aAAc,SACdjH,MAAO,UAGRuG,GAAM,GAAG5D,OAGK/D,gBAACmF,IAAS,CACPC,UAAU,MACVC,IAAG,GAAAG,OAAKmC,GAAM,GAAG5D,KAAI,aACrB7D,GAAI,CAAE8C,QAAS,IAAK5B,MAAO,QAASkE,UAAW,UAAW6C,YAAa,QACvEnE,MAAOuB,EAAQ,YAQ9C6B,GAAWvI,IAAK2F,GACfxE,gBAACuE,EAAI,CAACoC,IAAKnC,EAAKxF,GAAIwF,KAAMA,KAE3B6C,GAAexI,IAAK2F,GACnBxE,gBAACuE,EAAI,CAACoC,IAAKnC,EAAKxF,GAAIwF,KAAMA,KAE3B8C,GAAkBzI,IAAK2F,GACtBxE,gBAACuE,EAAI,CAACoC,IAAKnC,EAAKxF,GAAIwF,KAAMA,KAE3B+C,GAAa1I,IAAK2F,GACjBxE,gBAACuE,EAAI,CAACoC,IAAKnC,EAAKxF,GAAIwF,KAAMA,KAE3BgD,GAAS3I,IAAK2F,GACbxE,gBAACuE,EAAI,CAACoC,IAAKnC,EAAKxF,GAAIwF,KAAMA,KAE3BiD,GAAa5I,IAAK2F,GACjBxE,gBAACuE,EAAI,CAACoC,IAAKnC,EAAKxF,GAAIwF,KAAMA,KAE3BkD,GAAU7I,IAAK2F,GACdxE,gBAACsI,EAAS,CAAC3B,IAAKnC,EAAKxF,GAAIwF,KAAMA,M,gECxYvC,MAAM+D,GAAY,CAChB,CACEC,MAAO,WACPC,WAAY,sBACZC,KAAM,UACNC,UAAW,sBAEb,CACEH,MAAO,QACPC,WAAY,mBACZC,KAAM,aACNC,UAAW,wBAEb,CACEH,MAAO,UACPC,WAAY,qBACZC,KAAM,eACNC,UAAW,0BAEb,CACEH,MAAO,QACPC,WAAY,mBACZC,KAAM,cACNC,UAAW,0BAEb,CACEH,MAAO,OACPC,WAAY,kBACZC,KAAM,eACNC,UAAW,4BAGTC,GAAa,CACjB,CACEJ,MAAO,OACPC,WAAY,kBACZC,KAAM,aACNC,UAAW,yBAEb,CACEH,MAAO,UACPC,WAAY,qBACZC,KAAM,YACNC,UAAW,wBAEb,CACEH,MAAO,SACPC,WAAY,oBACZC,KAAM,gBACNC,UAAW,6BAGTE,GAAW,CACf,CACEL,MAAO,QACPC,WAAY,mBACZC,KAAM,YACNC,UAAW,sBAEb,CACEH,MAAO,OACPC,WAAY,kBACZC,KAAM,YACNC,UAAW,sBAEb,CACEH,MAAO,SACPC,WAAY,oBACZC,KAAM,UACNC,UAAW,oBAEb,CACEH,MAAO,SACPC,WAAY,oBACZC,KAAM,cACNC,UAAW,wBAEb,CACEH,MAAO,QACPC,WAAY,mBACZC,KAAM,eACNC,UAAW,0BAEb,CACEH,MAAO,WACPC,WAAY,sBACZC,KAAM,cACNC,UAAW,wBAEb,CACEH,MAAO,SACPC,WAAY,oBACZC,KAAM,UACNC,UAAW,sBAGTG,GAAY,CAChB,CAAEN,MAAO,OAAQC,WAAY,kBAAmBC,KAAM,OAAQC,UAAW,mBACzE,CAAEH,MAAO,WAAYC,WAAY,sBAAuBC,KAAM,OAAQC,UAAW,mBACjF,CAAEH,MAAO,SAAUC,WAAY,oBAAqBC,KAAM,OAAQC,UAAW,mBAC7E,CAAEH,MAAO,OAAQC,WAAY,kBAAmBC,KAAM,OAAQC,UAAW,iBACzE,CACEH,MAAO,UACPC,WAAY,qBACZC,KAAM,iBACNC,UAAW,4BAKA,SAASI,KACtB,OACE/I,gBAAA,WACEA,gBAACoC,IAAU,CAAC/B,QAAQ,QAAQ2G,MAAM,SAAS9G,GAAI,CAAC,gBAAiB,SAAS,kBAG1EF,gBAACgJ,KAAc,CAAC5D,UAAW6D,KAAO/I,GAAI,CAAC,gBAAiB,QACtDF,gBAACkJ,KAAK,CAAC3I,KAAK,QAAQC,aAAW,kBAAkBN,GAAI,CAAE,mCAAoC,CAAEoB,OAAQ,KACnGtB,gBAACmJ,KAAS,KACPZ,GAAU1J,IAAKuK,GACdpJ,gBAACqJ,KAAQ,CAAC1C,IAAKyC,EAAIZ,MAAOtI,GAAI,CAAE,mCAAoC,CAAEoB,OAAQ,KAC5EtB,gBAACsJ,KAAS,KACRtJ,gBAAA,OACEuJ,OAAQhE,MAAQ,KAADC,OAA2B4D,EAAIX,aAC9Ce,IAAKjE,MAAQ,KAADC,OAA2B4D,EAAIX,aAC3CpD,IAAK+D,EAAIZ,MACTiB,MAAM,KACN/I,OAAO,QAGXV,gBAACsJ,KAAS,KACRtJ,gBAAA,OACEuJ,OAAQhE,MAAQ,KAADC,OAA2B4D,EAAIT,YAC9Ca,IAAKjE,MAAQ,KAADC,OAA2B4D,EAAIT,YAC3CtD,IAAK+D,EAAIZ,MACTiB,MAAM,KACN/I,OAAO,aAQrBV,gBAACgJ,KAAc,CAAC5D,UAAW6D,KAAO/I,GAAI,CAAC,gBAAiB,QACtDF,gBAACkJ,KAAK,CAAC3I,KAAK,QAAQC,aAAW,mBAC7BR,gBAACmJ,KAAS,KACPP,GAAW/J,IAAKuK,GACfpJ,gBAACqJ,KAAQ,CAAC1C,IAAKyC,EAAIZ,MAAOtI,GAAI,CAAE,mCAAoC,CAAEoB,OAAQ,KAC5EtB,gBAACsJ,KAAS,KACRtJ,gBAAA,OACEuJ,OAAQhE,MAAQ,KAADC,OAA2B4D,EAAIX,aAC9Ce,IAAKjE,MAAQ,KAADC,OAA2B4D,EAAIX,aAC3CpD,IAAK+D,EAAIZ,MACTiB,MAAM,KACN/I,OAAO,QAGXV,gBAACsJ,KAAS,KACRtJ,gBAAA,OACEuJ,OAAQhE,MAAQ,KAADC,OAA2B4D,EAAIT,YAC9Ca,IAAKjE,MAAQ,KAADC,OAA2B4D,EAAIT,YAC3CtD,IAAK+D,EAAIZ,MACTiB,MAAM,KACN/I,OAAO,aAQrBV,gBAACgJ,KAAc,CAAC5D,UAAW6D,KAAO/I,GAAI,CAAC,gBAAiB,QACtDF,gBAACkJ,KAAK,CAAC3I,KAAK,QAAQC,aAAW,mBAC7BR,gBAACmJ,KAAS,KACPN,GAAShK,IAAKuK,GACbpJ,gBAACqJ,KAAQ,CAAC1C,IAAKyC,EAAIZ,MAAOtI,GAAI,CAAE,mCAAoC,CAAEoB,OAAQ,KAC5EtB,gBAACsJ,KAAS,KACRtJ,gBAAA,OACEuJ,OAAQhE,MAAQ,KAADC,OAA2B4D,EAAIX,aAC9Ce,IAAKjE,MAAQ,KAADC,OAA2B4D,EAAIX,aAC3CpD,IAAK+D,EAAIZ,MACTiB,MAAM,KACN/I,OAAO,QAGXV,gBAACsJ,KAAS,KACRtJ,gBAAA,OACEuJ,OAAQhE,MAAQ,KAADC,OAA2B4D,EAAIT,YAC9Ca,IAAKjE,MAAQ,KAADC,OAA2B4D,EAAIT,YAC3CtD,IAAK+D,EAAIZ,MACTiB,MAAM,KACN/I,OAAO,aAQrBV,gBAACgJ,KAAc,CAAC5D,UAAW6D,KAAO/I,GAAI,CAAC,gBAAiB,QACtDF,gBAACkJ,KAAK,CAAC3I,KAAK,QAAQC,aAAW,mBAC7BR,gBAACmJ,KAAS,KACPL,GAAUjK,IAAKuK,GACdpJ,gBAACqJ,KAAQ,CAAC1C,IAAKyC,EAAIZ,MAAOtI,GAAI,CAAC0C,QAAQ,OAAQ,mCAAoC,CAAEtB,OAAQ,KAC3FtB,gBAACsJ,KAAS,CAACtC,MAAM,UAEfhH,gBAAA,OACEuJ,OAAQhE,MAAQ,KAADC,OAA2B4D,EAAIX,aAC9Ce,IAAKjE,MAAQ,KAADC,OAA2B4D,EAAIX,aAC3CpD,IAAK+D,EAAIZ,MACT9H,OAAO,QAGXV,gBAACsJ,KAAS,CAACtC,MAAM,UACfhH,gBAAA,OACEuJ,OAAQhE,MAAQ,KAADC,OAA2B4D,EAAIT,YAC9Ca,IAAKjE,MAAQ,KAADC,OAA2B4D,EAAIT,YAC3CtD,IAAK+D,EAAIZ,MACT9H,OAAO,OACN,WCzNN,SAASgJ,KACtB,MAAO5J,EAAM6J,GAAW3J,WAAe,SACjC4J,EAAeC,YAAY,CAAEC,QAAS,CAAEhK,UAM9C,OACEE,gBAAC+J,IAAa,CAACC,MAAOJ,GACpB5J,gBAACC,IAAG,CACFC,GAAI,CACF0C,QAAS,OACTC,cAAe,SACfoH,UAAW,UAGbjK,gBAACkK,IAAW,MACZlK,gBAACC,IAAG,CACFC,GAAI,CACFc,SAAU,QACVC,IAAK,EACLG,MAAO,OACPV,OAAQ,OACRyJ,OAAQ,EACRC,gBAAkBJ,GACO,UAAvBA,EAAMF,QAAQhK,KAAmBkK,EAAMF,QAAQO,KAAK,KAAOL,EAAMF,QAAQO,KAAK,OAGlFrK,gBAAC0C,EAAM,CAAC5C,KAAMA,EAAMC,gBAzBJA,KACtB4J,EAASW,GAAmB,SAATA,EAAkB,QAAU,YA0B3CtK,gBAACC,IAAG,CACFC,GAAI,CACF0C,QAAS,OACTC,cAAe,MACfoH,UAAW,UAGbjK,gBAAC2C,IAAS,CACRzC,GAAI,CACFqK,GAAI,OACJrC,GAAI,OACJsC,GAAI,MACJC,GAAG,MACHC,OAAQ,EACR9G,UAAW,OACTV,SAAS,EACXH,WAAY,SACZ3B,MAAO,SAGfpB,gBAAA,OAAKwJ,IAAKjE,EAAQ,KAAsBF,IAAI,mCAAmC3E,OAAO,WAElFV,gBAACuC,IAAO,CAACoI,YAAY,WAAWC,UAAQ,IACxC5K,gBAAC2C,IAAS,CACRzC,GAAI,CACFqK,GAAI,OACJrC,GAAI,OACJsC,GAAI,OACJC,GAAI,OACJC,OAAQ,EACRxH,SAAU,EACV/C,SAAU,OACVyD,UAAW,OACXb,WAAY,WAGd/C,gBAAC6H,GAAO,OAEV7H,gBAACuC,IAAO,CAACoI,YAAY,WAAWC,UAAQ,IACxC5K,gBAAC2C,IAAS,CACpBvB,MAAM,OACMlB,GAAI,CAAEqK,GAAI,OAAQrC,GAAI,OAAQsC,GAAI,OAAQC,GAAI,OAAQC,OAAQ,EAAGtJ,MAAO,UAG5DpB,gBAAC+I,GAAQ,QAIzB/I,gBAACC,IAAG,CACFC,GAAI,CACF2K,GAAI,EACJC,GAAI,EACJC,GAAI,OACJ/J,SAAU,QACVgK,OAAQ,EACR5J,MAAO,OACPV,OAAQ,OACR0J,gBAAkBJ,GACO,UAAvBA,EAAMF,QAAQhK,KAAmBkK,EAAMF,QAAQO,KAAK,KAAOL,EAAMF,QAAQO,KAAK,OAGlFrK,gBAACsD,EAAM,SCpGF,SAAS2H,KACtB,OACEjL,gBAAA,OAAKkL,UAAU,OACblL,gBAAC0J,GAAoB,OCH3B,MAAMyB,GAAcC,SAASC,eAAe,QAC/BC,aAAoBH,IAE5BI,OAAOvL,gBAACiL,GAAG,S","file":"static/js/main.dbe5687f.chunk.js","sourcesContent":["var map = {\n\t\"./areas/archway.png\": 149,\n\t\"./areas/conservatory.png\": 150,\n\t\"./areas/den.png\": 151,\n\t\"./areas/digsite.png\": 152,\n\t\"./areas/gully.png\": 153,\n\t\"./areas/tidepools.png\": 154,\n\t\"./fruits/cuberry.png\": 155,\n\t\"./fruits/mintMango.png\": 156,\n\t\"./fruits/mixedFruits.png\": 157,\n\t\"./fruits/pogofruit.png\": 158,\n\t\"./fruits/polaricherry.png\": 159,\n\t\"./fruits/pomegranite.png\": 160,\n\t\"./fruits/pricklePear.png\": 161,\n\t\"./meats/briarHen.png\": 162,\n\t\"./meats/candiedHen.png\": 163,\n\t\"./meats/henHen.png\": 164,\n\t\"./meats/mixedMeats.png\": 165,\n\t\"./meats/paintedHen.png\": 166,\n\t\"./meats/roostro.png\": 167,\n\t\"./meats/seaHen.png\": 168,\n\t\"./meats/stonyHen.png\": 169,\n\t\"./meats/thundercluck.png\": 170,\n\t\"./other/ash.png\": 171,\n\t\"./other/mixed.png\": 172,\n\t\"./other/moondewNectar.png\": 173,\n\t\"./other/none.png\": 174,\n\t\"./other/water.png\": 175,\n\t\"./placeholder.png\": 176,\n\t\"./plots/coop.png\": 177,\n\t\"./plots/corral.png\": 178,\n\t\"./plots/garden.png\": 179,\n\t\"./plots/incinerator.png\": 180,\n\t\"./plots/pond.png\": 181,\n\t\"./plots/silo.png\": 182,\n\t\"./slimes/angler.png\": 183,\n\t\"./slimes/batty.png\": 184,\n\t\"./slimes/boom.png\": 185,\n\t\"./slimes/cotton.png\": 186,\n\t\"./slimes/crystal.png\": 187,\n\t\"./slimes/dervish.png\": 188,\n\t\"./slimes/fire.png\": 189,\n\t\"./slimes/flutter.png\": 190,\n\t\"./slimes/honey.png\": 191,\n\t\"./slimes/hunter.png\": 192,\n\t\"./slimes/phosphor.png\": 193,\n\t\"./slimes/pink.png\": 194,\n\t\"./slimes/puddle.png\": 195,\n\t\"./slimes/ringtail.png\": 196,\n\t\"./slimes/rock.png\": 197,\n\t\"./slimes/saber.png\": 198,\n\t\"./slimes/sloomber.png\": 199,\n\t\"./slimes/tabby.png\": 200,\n\t\"./slimes/tangle.png\": 201,\n\t\"./slimes/twin.png\": 202,\n\t\"./slimes/yolky.png\": 203,\n\t\"./veggies/carrot.png\": 204,\n\t\"./veggies/heartBeat.png\": 205,\n\t\"./veggies/mixedVeggies.png\": 206,\n\t\"./veggies/oddOnion.png\": 207,\n\t\"./veggies/waterLettuce.png\": 208\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 14;","module.exports = __webpack_public_path__ + \"static/media/archway.ec73d804.png\";","module.exports = __webpack_public_path__ + \"static/media/conservatory.d9707bc5.png\";","module.exports = __webpack_public_path__ + \"static/media/den.4ca8867c.png\";","module.exports = __webpack_public_path__ + \"static/media/digsite.6d96c5e3.png\";","module.exports = __webpack_public_path__ + \"static/media/gully.f97dc2d7.png\";","module.exports = __webpack_public_path__ + \"static/media/tidepools.5d0e0e00.png\";","module.exports = __webpack_public_path__ + \"static/media/cuberry.ab09bf20.png\";","module.exports = __webpack_public_path__ + \"static/media/mintMango.4edf247b.png\";","module.exports = __webpack_public_path__ + \"static/media/mixedFruits.99ffad96.png\";","module.exports = __webpack_public_path__ + \"static/media/pogofruit.d99d62e2.png\";","module.exports = __webpack_public_path__ + \"static/media/polaricherry.be0d6bbf.png\";","module.exports = __webpack_public_path__ + \"static/media/pomegranite.ed42d40b.png\";","module.exports = __webpack_public_path__ + \"static/media/pricklePear.80ff4520.png\";","module.exports = __webpack_public_path__ + \"static/media/briarHen.5dd95c4e.png\";","module.exports = __webpack_public_path__ + \"static/media/candiedHen.4a5c9fde.png\";","module.exports = __webpack_public_path__ + \"static/media/henHen.b199b788.png\";","module.exports = __webpack_public_path__ + \"static/media/mixedMeats.ae4c6527.png\";","module.exports = __webpack_public_path__ + \"static/media/paintedHen.98b0848f.png\";","module.exports = __webpack_public_path__ + \"static/media/roostro.1cd0ebac.png\";","module.exports = __webpack_public_path__ + \"static/media/seaHen.a833e5d9.png\";","module.exports = __webpack_public_path__ + \"static/media/stonyHen.fb93c23a.png\";","module.exports = __webpack_public_path__ + \"static/media/thundercluck.adcc02c8.png\";","module.exports = __webpack_public_path__ + \"static/media/ash.afa2f47f.png\";","module.exports = __webpack_public_path__ + \"static/media/mixed.c45430c0.png\";","module.exports = __webpack_public_path__ + \"static/media/moondewNectar.2ff3f726.png\";","module.exports = __webpack_public_path__ + \"static/media/none.ba5bfce3.png\";","module.exports = __webpack_public_path__ + \"static/media/water.50f45466.png\";","module.exports = __webpack_public_path__ + \"static/media/placeholder.177530d6.png\";","module.exports = __webpack_public_path__ + \"static/media/coop.a5c22db3.png\";","module.exports = __webpack_public_path__ + \"static/media/corral.fdde753d.png\";","module.exports = __webpack_public_path__ + \"static/media/garden.210cdab5.png\";","module.exports = __webpack_public_path__ + \"static/media/incinerator.5a287705.png\";","module.exports = __webpack_public_path__ + \"static/media/pond.97012dd9.png\";","module.exports = __webpack_public_path__ + \"static/media/silo.5af2f66f.png\";","module.exports = __webpack_public_path__ + \"static/media/angler.e9745ffb.png\";","module.exports = __webpack_public_path__ + \"static/media/batty.6fcaeff1.png\";","module.exports = __webpack_public_path__ + \"static/media/boom.9b010936.png\";","module.exports = __webpack_public_path__ + \"static/media/cotton.6a0423f1.png\";","module.exports = __webpack_public_path__ + \"static/media/crystal.16426438.png\";","module.exports = __webpack_public_path__ + \"static/media/dervish.e4793c4c.png\";","module.exports = __webpack_public_path__ + \"static/media/fire.a9b687df.png\";","module.exports = __webpack_public_path__ + \"static/media/flutter.78ba9a6e.png\";","module.exports = __webpack_public_path__ + \"static/media/honey.95ea7e42.png\";","module.exports = __webpack_public_path__ + \"static/media/hunter.c9b8ccc6.png\";","module.exports = __webpack_public_path__ + \"static/media/phosphor.1c0e2c68.png\";","module.exports = __webpack_public_path__ + \"static/media/pink.25ee1a6c.png\";","module.exports = __webpack_public_path__ + \"static/media/puddle.70fc04a3.png\";","module.exports = __webpack_public_path__ + \"static/media/ringtail.61830003.png\";","module.exports = __webpack_public_path__ + \"static/media/rock.7fb01f8e.png\";","module.exports = __webpack_public_path__ + \"static/media/saber.1367587c.png\";","module.exports = __webpack_public_path__ + \"static/media/sloomber.94ca01d1.png\";","module.exports = __webpack_public_path__ + \"static/media/tabby.23166e37.png\";","module.exports = __webpack_public_path__ + \"static/media/tangle.45393067.png\";","module.exports = __webpack_public_path__ + \"static/media/twin.3ecc4303.png\";","module.exports = __webpack_public_path__ + \"static/media/yolky.cc8cd418.png\";","module.exports = __webpack_public_path__ + \"static/media/carrot.fd11ef75.png\";","module.exports = __webpack_public_path__ + \"static/media/heartBeat.8fb58b2a.png\";","module.exports = __webpack_public_path__ + \"static/media/mixedVeggies.235c2e3d.png\";","module.exports = __webpack_public_path__ + \"static/media/oddOnion.233c0618.png\";","module.exports = __webpack_public_path__ + \"static/media/waterLettuce.480ef292.png\";","module.exports = __webpack_public_path__ + \"static/media/gully.e775cd29.png\";","module.exports = __webpack_public_path__ + \"static/media/tidepools.d905d3ee.png\";","module.exports = __webpack_public_path__ + \"static/media/conservatory.9737df22.png\";","module.exports = __webpack_public_path__ + \"static/media/archway.5e2e964b.png\";","module.exports = __webpack_public_path__ + \"static/media/den.41ad3a4e.png\";","module.exports = __webpack_public_path__ + \"static/media/digsite.985ea9a2.png\";","module.exports = __webpack_public_path__ + \"static/media/mapOverview.51ce8e46.png\";","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\n\nimport WbSunnyRoundedIcon from \"@mui/icons-material/WbSunnyRounded\";\nimport ModeNightRoundedIcon from \"@mui/icons-material/ModeNightRounded\";\n\nfunction ToggleColorMode({ mode, toggleColorMode }) {\n  return (\n    <Box sx={{ maxWidth: \"32px\" }}>\n      <Button\n        variant=\"text\"\n        onClick={toggleColorMode}\n        size=\"small\"\n        aria-label=\"button to toggle theme\"\n        sx={{ minWidth: \"32px\", height: \"32px\", p: \"4px\" }}\n      >\n        {mode === \"dark\" ? (\n          <WbSunnyRoundedIcon fontSize=\"small\" />\n        ) : (\n          <ModeNightRoundedIcon fontSize=\"small\" />\n        )}\n      </Button>\n    </Box>\n  );\n}\n\nToggleColorMode.propTypes = {\n  mode: PropTypes.oneOf([\"dark\", \"light\"]).isRequired,\n  toggleColorMode: PropTypes.func.isRequired,\n};\n\nexport default ToggleColorMode;\n","import React from \"react\";\nimport Modal from \"@mui/material/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport Link from \"@mui/material/Link\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 1000,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function Help() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button color=\"text.secondary\" variant=\"body2\" onClick={handleOpen}>\n        Need Help?\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography variant=\"body2\" fontWeight={600}  paddingLeft={1}>\n            PLEASE BE AWARE THAT THIS PROJECT IS A WORK IN PROGRESS IN ITS VERY EARLY STAGES!\n          </Typography>\n          <Divider />\n          <br />\n          <Typography>\n            There are a lot of features still missing, that I am planning to add whenever I find the\n            time to do so, like e.g. better visuals, being able to export and import your plan, ...\n          </Typography>\n          <br />\n          <Typography>\n            If you noticed a bug, have a feature request, or have just a general question, please{\" \"}\n            <Link href=\"https://github.com/SR2Planner/SR2Planner/issues/new?assignees=SR2Planner&labels=new&projects=SR2Planner%2F1&template=HELP_REQUEST.yml&title=Help+Request%3A+\">\n              open a help request here\n            </Link>\n            .\n          </Typography>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport Typography from \"@mui/material/Typography\";\nimport ToggleColorMode from \"../util/ToggleColorMode\";\nimport IconButton from \"@mui/material/IconButton\";\nimport GitHub from \"@mui/icons-material/GitHub\";\nimport Help from '../util/Help'\n\nexport default function Header({ mode, toggleColorMode }) {\n  return (\n    <Container>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: { sm: \"row\" },\n          width: \"100%\",\n          alignItems: \"center\",\n          padding: 1,\n          gap: 2,\n        }}\n      >\n        <Typography flexGrow=\"1\" variant=\"h6\" fontWeight={600}>\n          Slime Rancher 2 Planner\n        </Typography>\n\n        <Help/>\n        <Typography color=\"text.secondary\" variant=\"body1\">\n          Version: 0.3\n        </Typography>\n        <IconButton\n          color=\"inherit\"\n          href=\"https://github.com/SR2Planner/SR2Planner\"\n          aria-label=\"GitHub\"\n          sx={{ alignSelf: \"center\" }}\n        >\n          <GitHub />\n        </IconButton>\n        <ToggleColorMode mode={mode} toggleColorMode={toggleColorMode} />\n      </Box>\n    </Container>\n  );\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport Typography from \"@mui/material/Typography\";\nimport AnnouncementIcon from \"@mui/icons-material/Announcement\";\n\nexport default function Footer() {\n  return (\n    <Container>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: { sm: \"row\" },\n          width: \"100%\",\n          alignItems: \"center\",\n        }}\n      >\n        <AnnouncementIcon />\n        <br />\n        <Typography variant=\"body2\" fontWeight={600} paddingLeft={1}>\n          PLEASE BE AWARE THAT THIS PROJECT IS A WORK IN PROGRESS IN ITS VERY EARLY STAGES!\n        </Typography>\n      </Box>\n\n      <Typography variant=\"body2\" color=\"text.secondary\" mb={1} paddingTop={1}>\n        That means that a lot of features are still mising, like any sort of data saving\n        functionality. Make sure to take a screenshoot of your plan before you leave or reload this\n        site!\n      </Typography>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Input from \"@mui/material/Input\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActionArea from \"@mui/material/CardActionArea\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Stack from \"@mui/material/Stack\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst plotTypes = [\n  { name: \"Corral\", image: \"plots/corral.png\" },\n  { name: \"Coop\", image: \"plots/coop.png\" },\n  { name: \"Fruit Tree\", image: \"plots/garden.png\" },\n  { name: \"Veggie Patch\", image: \"plots/garden.png\" },\n  { name: \"Incinerator\", image: \"plots/incinerator.png\" },\n  { name: \"Pond\", image: \"plots/pond.png\" },\n  { name: \"Silo\", image: \"plots/silo.png\" },\n  { name: \"Empty\", image: \"placeholder.png\" },\n];\nconst corralSlimeTypes = [\n  { name: \"Angler Slime\", image: \"slimes/angler.png\" },\n  { name: \"Batty Slime\", image: \"slimes/batty.png\" },\n  { name: \"Boom Slime\", image: \"slimes/boom.png\" },\n  { name: \"Cotton Slime\", image: \"slimes/cotton.png\" },\n  { name: \"Crystal Slime\", image: \"slimes/crystal.png\" },\n  { name: \"Dervish Slime\", image: \"slimes/dervish.png\" },\n  { name: \"Flutter Slime\", image: \"slimes/flutter.png\" },\n  { name: \"Honey Slime\", image: \"slimes/honey.png\" },\n  { name: \"Hunter Slime\", image: \"slimes/hunter.png\" },\n  { name: \"Phosphor Slime\", image: \"slimes/phosphor.png\" },\n  { name: \"Pink Slime\", image: \"slimes/pink.png\" },\n  { name: \"Ringtail Slime\", image: \"slimes/ringtail.png\" },\n  { name: \"Rock Slime\", image: \"slimes/rock.png\" },\n  { name: \"Saber Slime\", image: \"slimes/saber.png\" },\n  { name: \"Sloomber Slime\", image: \"slimes/sloomber.png\" },\n  { name: \"Tabby Slime\", image: \"slimes/tabby.png\" },\n  { name: \"Tangle Slime\", image: \"slimes/tangle.png\" },\n  { name: \"Twin Slime\", image: \"slimes/twin.png\" },\n  { name: \"Yolky Slime\", image: \"slimes/yolky.png\" },\n  { name: \"None\", image: \"placeholder.png\" },\n];\nconst coopTypes = [\n  { name: \"Briar Hen\", image: \"meats/briarHen.png\" },\n  { name: \"Candied Hen\", image: \"meats/candiedHen.png\" },\n  { name: \"Hen Hen\", image: \"meats/henHen.png\" },\n  { name: \"Painted Hen\", image: \"meats/paintedHen.png\" },\n  { name: \"Sea Hen\", image: \"meats/seaHen.png\" },\n  { name: \"Stony Hen\", image: \"meats/stonyHen.png\" },\n  { name: \"Thundercluck\", image: \"meats/thundercluck.png\" },\n  { name: \"Mixed Meats\", image: \"meats/mixedMeats.png\" },\n  { name: \"Yolky Slime\", image: \"slimes/yolky.png\" },\n  { name: \"None\", image: \"placeholder.png\" },\n];\nconst fruitTypes = [\n  { name: \"Cuberry\", image: \"fruits/cuberry.png\" },\n  { name: \"Mint Mango\", image: \"fruits/mintMango.png\" },\n  { name: \"Pogofruit\", image: \"fruits/pogofruit.png\" },\n  { name: \"Pomegranite\", image: \"fruits/pomegranite.png\" },\n  { name: \"Polaricherry\", image: \"fruits/polaricherry.png\" },\n  { name: \"Prickle Pear\", image: \"fruits/pricklePear.png\" },\n  { name: \"None\", image: \"placeholder.png\" },\n];\nconst veggieTypes = [\n  { name: \"Carrot\", image: \"veggies/carrot.png\" },\n  { name: \"Heart Beat\", image: \"veggies/heartBeat.png\" },\n  { name: \"Odd Onion\", image: \"veggies/oddOnion.png\" },\n  { name: \"Water Lettuce\", image: \"veggies/waterLettuce.png\" },\n  { name: \"None\", image: \"placeholder.png\" },\n];\nconst incineratorSlimeTypes = [\n  { name: \"Fire\", image: \"slimes/fire.png\" },\n  { name: \"None\", image: \"placeholder.png\" },\n];\nconst pondSlimeTypes = [\n  { name: \"Puddle\", image: \"slimes/puddle.png\" },\n  { name: \"None\", image: \"placeholder.png\" },\n];\n\nexport default function Plot({ plot }) {\n  const [open, setOpen] = React.useState(false);\n  const [chosenPlotType, setChosenPlotType] = React.useState(\"\");\n  const [chosenContent1, setChosenContent1] = React.useState(\"\");\n  const [chosenContent2, setChosenContent2] = React.useState(\"\");\n  const [contentOptions, setContentOptions] = React.useState([\"Choose Plot Type\"]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangePlotType = (event) => {\n    setChosenPlotType(event.target.value);\n    switch (event.target.value.name) {\n      case \"Corral\":\n        setContentOptions(corralSlimeTypes);\n        break;\n      case \"Coop\":\n        setContentOptions(coopTypes);\n        break;\n      case \"Fruit Tree\":\n        setContentOptions(fruitTypes);\n        break;\n      case \"Veggie Patch\":\n        setContentOptions(veggieTypes);\n        break;\n      case \"Pond\":\n        setContentOptions(pondSlimeTypes);\n        break;\n      case \"Incinerator\":\n        setContentOptions(incineratorSlimeTypes);\n        break;\n      case \"Silo\":\n        setContentOptions([\"Nothing to choose\"]);\n        break;\n      case \"Empty\":\n      default:\n        setContentOptions([\"Choose other Type\"]);\n    }\n  };\n\n  const handleChangeContent1 = (event) => {\n    setChosenContent1(event.target.value);\n  };\n\n  const handleChangeContent2 = (event) => {\n    setChosenContent2(event.target.value);\n  };\n\n  let plotContentImages = <div />;\n\n  if (\n    chosenPlotType.name !== undefined &&\n    chosenPlotType.name !== \"\" &&\n    chosenPlotType.name !== \"Empty\"\n  ) {\n    if (\n      chosenContent1.name !== undefined &&\n      chosenContent2.name !== undefined &&\n      chosenContent1.name !== \"\" &&\n      chosenContent2.name !== \"\" &&\n      chosenContent1.name !== \"None\" &&\n      chosenContent2.name !== \"None\"\n    ) {\n      plotContentImages = (\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"row\",\n          }}\n        >\n          <CardMedia\n            component=\"img\"\n            alt={chosenContent1.name}\n            sx={{ padding: \"0\", width: \"25px\", objectFit: \"contain\" }}\n            image={require(`../../../public/images/${chosenContent1.image}`)}\n          />\n          <CardMedia\n            component=\"img\"\n            alt={chosenContent2.name}\n            sx={{ padding: \"0\", width: \"25px\", objectFit: \"contain\" }}\n            image={require(`../../../public/images/${chosenContent2.image}`)}\n          />\n        </Box>\n      );\n    } else if (\n      chosenContent1.name !== undefined &&\n      chosenContent1.name !== \"\" &&\n      chosenContent1.name !== \"None\"\n    ) {\n      plotContentImages = (\n        <CardMedia\n          component=\"img\"\n          alt={chosenContent1.name}\n          sx={{ padding: \"0\", width: \"35px\", objectFit: \"contain\" }}\n          image={require(`../../../public/images/${chosenContent1.image}`)}\n        />\n      );\n    } else if (\n      chosenContent2.name !== undefined &&\n      chosenContent2.name !== \"\" &&\n      chosenContent2.name !== \"None\"\n    ) {\n      plotContentImages = (\n        <CardMedia\n          component=\"img\"\n          alt={chosenContent2.name}\n          sx={{ padding: \"0\", width: \"35px\", objectFit: \"contain\" }}\n          image={require(`../../../public/images/${chosenContent2.image}`)}\n        />\n      );\n    } else if (\n      chosenPlotType.name !== undefined &&\n      (chosenContent1.name === undefined ||\n        chosenContent1.name === \"\" ||\n        chosenContent1.name === \"None\") &&\n      (chosenContent2.name === undefined ||\n        chosenContent2.name === \"\" ||\n        chosenContent2.name === \"None\")\n    ) {\n      plotContentImages = (\n        <CardMedia\n          component=\"img\"\n          alt={chosenPlotType.name}\n          sx={{ padding: \"0\", width: \"35px\", objectFit: \"contain\" }}\n          image={require(`../../../public/images/${chosenPlotType.image}`)}\n        />\n      );\n    } else {\n      plotContentImages = <div />;\n    }\n  } else {\n    plotContentImages = <div />;\n  }\n\n  return (\n    <div>\n      <Card\n        sx={{\n          height: \"50px\",\n          width: \"50px\",\n          position: \"absolute\",\n          left: plot.left,\n          top: plot.top,\n        }}\n      >\n        <CardActionArea\n          onClick={handleOpen}\n          sx={{\n            height: \"50px\",\n            width: \"50px\",\n          }}\n        >\n          <CardContent\n            sx={{\n              height: \"50px\",\n              width: \"50px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              padding: \"0px\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {plotContentImages}\n          </CardContent>\n        </CardActionArea>\n      </Card>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <Stack spacing={2} sx={style}>\n          <FormControl fullWidth>\n            <Select\n              displayEmpty\n              id=\"choose-plot-type-name\"\n              value={chosenPlotType}\n              onChange={handleChangePlotType}\n              input={<Input />}\n              MenuProps={MenuProps}\n            >\n              <MenuItem value=\"\">\n                <em>Plot Type</em>\n              </MenuItem>\n              {plotTypes.map((plotType) => (\n                <MenuItem key={plotType.name} value={plotType}>\n                  {plotType.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          {chosenPlotType.name !== undefined &&\n            chosenPlotType.name !== \"\" &&\n            chosenPlotType.name !== \"Empty\" &&\n            chosenPlotType.name !== \"Silo\" && (\n              <>\n                <FormControl fullWidth>\n                  <Select\n                    displayEmpty\n                    value={chosenContent1}\n                    onChange={handleChangeContent1}\n                    input={<Input />}\n                    MenuProps={MenuProps}\n                  >\n                    <MenuItem value=\"\">\n                      <em>Plot Content 1</em>\n                    </MenuItem>\n                    {contentOptions.map((content) => (\n                      <MenuItem key={content.name} value={content}>\n                        {content.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                {(chosenPlotType.name === \"Corral\" || chosenPlotType.name === \"Coop\") && (\n                  <FormControl fullWidth>\n                    <Select\n                      displayEmpty\n                      value={chosenContent2}\n                      onChange={handleChangeContent2}\n                      input={<Input />}\n                      MenuProps={MenuProps}\n                    >\n                      <MenuItem value=\"\">\n                        <em>Plot Content 2</em>\n                      </MenuItem>\n                      {contentOptions.map((content) => (\n                        <MenuItem key={content.name} value={content}>\n                          {content.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                )}\n              </>\n            )}\n        </Stack>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Input from \"@mui/material/Input\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActionArea from \"@mui/material/CardActionArea\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Stack from \"@mui/material/Stack\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst freeRangeeTypes = [\n  { name: \"Angler Slime\", image: \"slimes/angler.png\" },\n  { name: \"Batty Slime\", image: \"slimes/batty.png\" },\n  { name: \"Boom Slime\", image: \"slimes/boom.png\" },\n  { name: \"Cotton Slime\", image: \"slimes/cotton.png\" },\n  { name: \"Crystal Slime\", image: \"slimes/crystal.png\" },\n  { name: \"Dervish Slime\", image: \"slimes/dervish.png\" },\n  { name: \"Flutter Slime\", image: \"slimes/flutter.png\" },\n  { name: \"Honey Slime\", image: \"slimes/honey.png\" },\n  { name: \"Hunter Slime\", image: \"slimes/hunter.png\" },\n  { name: \"Phosphor Slime\", image: \"slimes/phosphor.png\" },\n  { name: \"Pink Slime\", image: \"slimes/pink.png\" },\n  { name: \"Ringtail Slime\", image: \"slimes/ringtail.png\" },\n  { name: \"Rock Slime\", image: \"slimes/rock.png\" },\n  { name: \"Saber Slime\", image: \"slimes/saber.png\" },\n  { name: \"Tabby Slime\", image: \"slimes/tabby.png\" },\n  { name: \"Tangle Slime\", image: \"slimes/tangle.png\" },\n  { name: \"Yolky Slime\", image: \"slimes/yolky.png\" },\n  { name: \"Briar Hen\", image: \"meats/briarHen.png\" },\n  { name: \"Hen Hen\", image: \"meats/henHen.png\" },\n  { name: \"Painted Hen\", image: \"meats/paintedHen.png\" },\n  { name: \"Sea Hen\", image: \"meats/seaHen.png\" },\n  { name: \"Stony Hen\", image: \"meats/stonyHen.png\" },\n  { name: \"Thundercluck\", image: \"meats/Thundercluck.png\" },\n  { name: \"Mixed Meats\", image: \"meats/mixedMeats.png\" },\n  { name: \"Cuberry\", image: \"fruits/cuberry.png\" },\n  { name: \"Mint Mango\", image: \"fruits/mintMango.png\" },\n  { name: \"Pogofruit\", image: \"fruits/pogofruit.png\" },\n  { name: \"Pomegranite\", image: \"fruits/pomegranite.png\" },\n  { name: \"Prickle Pear\", image: \"fruits/pricklePear.png\" },\n  { name: \"Mixed Fruits\", image: \"fruits/mixedFruits.png\" },\n  { name: \"Carrot\", image: \"veggies/carrot.png\" },\n  { name: \"Heart Beat\", image: \"veggies/heartBeat.png\" },\n  { name: \"Odd Onion\", image: \"veggies/oddOnion.png\" },\n  { name: \"Water Lettuce\", image: \"veggies/waterLettuce.png\" },\n  { name: \"Mixed Veggies\", image: \"veggies/mixedVeggies.png\" },\n  { name: \"None\", image: \"placeholder.png\" },\n];\n\nexport default function FreeRangePlanner({ plot }) {\n  const [open, setOpen] = React.useState(false);\n  const [chosenContent1, setChosenContent1] = React.useState([]);\n  const [chosenContent2, setChosenContent2] = React.useState([]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeContent1 = (event) => {\n    setChosenContent1(event.target.value);\n  };\n\n  const handleChangeContent2 = (event) => {\n    setChosenContent2(event.target.value);\n  };\n  let plotText = \"Free Range\";\n\n  let plotContentImages = <div />;\n\n  if (\n    chosenContent1.name !== undefined &&\n    chosenContent2.name !== undefined &&\n    chosenContent1.name !== \"\" &&\n    chosenContent2.name !== \"\" &&\n    chosenContent1.name !== \"None\" &&\n    chosenContent2.name !== \"None\"\n  ) {\n    plotContentImages = (\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n      >\n        <CardMedia\n          component=\"img\"\n          alt={chosenContent1.name}\n          sx={{ padding: \"0\", width: \"25px\", objectFit: \"contain\" }}\n          image={require(`../../../public/images/${chosenContent1.image}`)}\n        />\n        <CardMedia\n          component=\"img\"\n          alt={chosenContent2.name}\n          sx={{ padding: \"0\", width: \"25px\", objectFit: \"contain\" }}\n          image={require(`../../../public/images/${chosenContent2.image}`)}\n        />\n      </Box>\n    );\n  } else if (\n    chosenContent1.name !== undefined &&\n    chosenContent1.name !== \"\" &&\n    chosenContent1.name !== \"None\"\n  ) {\n    plotContentImages = (\n      <CardMedia\n        component=\"img\"\n        alt={chosenContent1.name}\n        sx={{ padding: \"0\", width: \"35px\", objectFit: \"contain\" }}\n        image={require(`../../../public/images/${chosenContent1.image}`)}\n      />\n    );\n  } else if (\n    chosenContent2.name !== undefined &&\n    chosenContent2.name !== \"\" &&\n    chosenContent2.name !== \"None\"\n  ) {\n    plotContentImages = (\n      <CardMedia\n        component=\"img\"\n        alt={chosenContent2.name}\n        sx={{ padding: \"0\", width: \"35px\", objectFit: \"contain\" }}\n        image={require(`../../../public/images/${chosenContent2.image}`)}\n      />\n    );\n  } else {\n    plotContentImages = <div>\n      <Typography\n        variant=\"body1\"\n        align=\"center\"\n        sx={{\n          paddingBottom: \"3px\",\n          fontSize: \"0.75rem\"\n        }}>\n          {plotText}\n      </Typography></div>;\n  }\n\n  return (\n    <div>\n      <Card\n        sx={{\n          height: \"50px\",\n          width: \"50px\",\n          position: \"absolute\",\n          left: plot.left,\n          top: plot.top,\n          background: \"rgba(128, 220, 220, 1)\",\n        }}\n      >\n        <CardActionArea\n          onClick={handleOpen}\n          sx={{\n            height: \"50px\",\n            width: \"50px\",\n          }}\n        >\n          <CardContent\n            sx={{\n              height: \"50px\",\n              width: \"50px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              padding: \"0px\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {plotContentImages}\n          </CardContent>\n        </CardActionArea>\n      </Card>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <Stack spacing={2} sx={style}>\n          <Typography>Plan {plot.plotName}</Typography>\n          <FormControl fullWidth>\n            <Select\n              displayEmpty\n              value={chosenContent1}\n              onChange={handleChangeContent1}\n              input={<Input />}\n              MenuProps={MenuProps}\n            >\n              <MenuItem value=\"\">\n                <em>Plot Content 1</em>\n              </MenuItem>\n              {freeRangeeTypes.map((content) => (\n                <MenuItem key={content} value={content}>\n                  {content.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl fullWidth>\n            <Select\n              displayEmpty\n              value={chosenContent2}\n              onChange={handleChangeContent2}\n              input={<Input />}\n              MenuProps={MenuProps}\n            >\n              <MenuItem value=\"\">\n                <em>Plot Content 2</em>\n              </MenuItem>\n              {freeRangeeTypes.map((content) => (\n                <MenuItem key={content} value={content}>\n                  {content.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Stack>\n      </Modal>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Plot from \"../planning/Plot\";\nimport FreeRange from \"../planning/FreeRange\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\n\nconst plotsGully = [\n  { id: \"gu1\", top: 140, left: 640 },\n  { id: \"gu2\", top: 210, left: 520 },\n  { id: \"gu3\", top: 210, left: 600 },\n  { id: \"gu4\", top: 225, left: 715 },\n  { id: \"gu5\", top: 350, left: 640 },\n];\n\nconst plotsTidepools = [\n  { id: \"tp1\", top: 140, left: 890 },\n  { id: \"tp2\", top: 150, left: 1000 },\n  { id: \"tp3\", top: 260, left: 950 },\n  { id: \"tp4\", top: 260, left: 1015 },\n  { id: \"tp5\", top: 350, left: 1000 },\n];\n\nconst plotsConservatory = [\n  { id: \"cv1\", top: 140, left: 1180 },\n  { id: \"cv2\", top: 140, left: 1235 },\n  { id: \"cv3\", top: 295, left: 1390 },\n  { id: \"cv4\", top: 350, left: 1390 },\n  { id: \"cv5\", top: 295, left: 1235 },\n  { id: \"cv6\", top: 350, left: 1180 },\n  { id: \"cv7\", top: 350, left: 1235 },\n  { id: \"cv8\", top: 350, left: 1290 },\n];\n\nconst plotsArchway = [\n  { id: \"aw1\", top: 557, left: 570 },\n  { id: \"aw2\", top: 685, left: 520 },\n  { id: \"aw3\", top: 590, left: 652 },\n  { id: \"aw4\", top: 645, left: 718 },\n  { id: \"aw5\", top: 715, left: 700 },\n];\n\nconst plotsDen = [\n  { id: \"dn1\", top: 608, left: 858 },\n  { id: \"dn2\", top: 582, left: 915 },\n  { id: \"dn3\", top: 690, left: 897 },\n  { id: \"dn4\", top: 692, left: 960 },\n  { id: \"dn5\", top: 667, left: 1046 },\n];\n\nconst plotsDigsite = [\n  { id: \"ds1\", top: 525, left: 1275 },\n  { id: \"ds2\", top: 657, left: 1262 },\n  { id: \"ds3\", top: 710, left: 1262 },\n  { id: \"ds4\", top: 748, left: 1315 },\n];\n\nconst freeRange = [\n  { id: \"frGu\", top: 350, left: 520 },\n  { id: \"frTp\", top: 350, left: 858 },\n  { id: \"frCv\", top: 140, left: 1395 },\n  { id: \"frAw\", top: 525, left: 718 },\n  { id: \"frDn\", top: 525, left: 1046 },\n  { id: \"frDs\", top: 525, left: 1395 },\n];\n\nconst areas = [\n  {\n    name: \"The Gully\",\n    image: \"areas/gully.png\",\n    areaMap:\"./gully.png\",\n    color: \"rgba(212, 128, 35, 1)\",\n  },\n  {\n    name: \"The Tidepools\",\n    image: \"areas/tidepools.png\",\n    areaMap:\"./tidepools.png\",\n    color: \"rgba(241, 93, 155, 1)\",\n  },\n  {\n    name: \"The Conservatory\",\n    image: \"areas/conservatory.png\",\n    areaMap:\"./conservatory.png\",\n    color: \"rgba(5, 92, 163, 1)\",\n  },\n  {\n    name: \"The Archway\",\n    image: \"areas/archway.png\",\n    areaMap:\"./archway.png\",\n    color: \"rgba(204, 212, 250, 1)\",\n  },\n  {\n    name: \"The Den\",\n    image: \"areas/den.png\",\n    areaMap:\"./den.png\",\n    color: \"rgba(123, 104, 255, 1)\",\n  },\n  {\n    name: \"The Digsite\",\n    image: \"areas/digsite.png\",\n    areaMap:\"./digsite.png\",\n    color: \"rgba(145, 126, 171, 1)\",\n  },\n];\n\nexport default function Planner() {\n  return (\n    <div>\n        <div>\n          <Grid\n            container\n            spacing={1}\n            sx={{\n              width: \"1000px\",\n            }}\n          >\n            <Grid item xs={4}>\n              <Card>\n                <CardContent\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    background: \"rgba(212, 128, 35, 1)\",\n                    pb: \"0px\"\n                  }}\n                >\n                <Container sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    background: \"rgba(212, 128, 35, 1)\",\n                }}>\n                  <CardMedia\n                    component=\"img\"\n                    alt={areas[0].name}\n                    sx={{ padding: \"0\", width: \"40px\", objectFit: \"contain\", marginRight: \"10px\" }}\n                    image={require(`../../../public/images/${areas[0].image}`)}\n                  />\n                  <Typography\n                    variant=\"body1\"\n                    align=\"center\"\n                    sx={{\n                      background: \"rgba(255, 255, 255, .5)\",\n                      padding: \"2px\",\n                      lineHeight: 2,\n                      alignContent: \"center\",\n                      width: \"150px\",\n                    }}\n                  >\n                    {areas[0].name}\n                  </Typography>\n                  </Container>\n                 <CardMedia\n                    component=\"img\"\n                    alt={`${areas[0].name} area map`}\n                    sx={{ padding: \"0\", width: \"300px\", objectFit: \"contain\", alignSelf: \"center\" }}\n                    image={require(`./gully.png`)}\n                  />\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    background: \"rgba(241, 93, 155, 1)\",\n                  }}\n                >\n                                <Container sx={{\n                                    display: \"flex\",\n                                    flexDirection: \"row\",\n                                    background: \"rgba(241, 93, 155, 1)\",\n                                }}>\n                  <CardMedia\n                    component=\"img\"\n                    alt={areas[0].name}\n                    sx={{ padding: \"0\", width: \"40px\", objectFit: \"contain\", marginRight: \"10px\" }}\n                    image={require(`../../../public/images/${areas[1].image}`)}\n                  />\n                  <Typography\n                    variant=\"body1\"\n                    align=\"center\"\n                    sx={{\n                      background: \"rgba(255, 255, 255, .5)\",\n                      padding: \"2px\",\n                      lineHeight: 2,\n                      alignContent: \"center\",\n                      width: \"150px\",\n                    }}\n                  >\n                    {areas[1].name}\n                  </Typography>\n                                    </Container>\n\n                                   <CardMedia\n                                      component=\"img\"\n                                      alt={`${areas[1].name} area map`}\n                                      sx={{ padding: \"0\", width: \"300px\", objectFit: \"contain\", marginRight: \"10px\" }}\n                                      image={require(`./tidepools.png`)}\n                                    />\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    background: \"rgba(5, 92, 163, 1)\",\n                  }}\n                >\n                               <Container sx={{\n                                    display: \"flex\",\n                                    flexDirection: \"row\",\n                                    background: \"rgba(5, 92, 163, 1)\",\n                                }}>\n                  <CardMedia\n                    component=\"img\"\n                    alt={areas[2].name}\n                    sx={{ padding: \"0\", width: \"40px\", objectFit: \"contain\", marginRight: \"10px\" }}\n                    image={require(`../../../public/images/${areas[2].image}`)}\n                  />\n                  <Typography\n                    variant=\"body1\"\n                    align=\"center\"\n                    sx={{\n                      background: \"rgba(255, 255, 255, .5)\",\n                      padding: \"2px\",\n                      lineHeight: 2,\n                      alignContent: \"center\",\n                      width: \"150px\",\n                    }}\n                  >\n                    {areas[2].name}\n                  </Typography>\n                                  </Container>\n                                   <CardMedia\n                                      component=\"img\"\n                                      alt={`${areas[2].name} area map`}\n                                      sx={{ padding: \"0\", width: \"300px\", objectFit: \"contain\", marginRight: \"10px\" }}\n                                      image={require(`./conservatory.png`)}\n                                    />\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    background: \"rgba(204, 212, 250, 1)\",\n                  }}\n                >\n                                <Container sx={{\n                                    display: \"flex\",\n                                    flexDirection: \"row\",\n                                    background: \"rgba(204, 212, 250, 1)\",\n                                }}>\n                  <CardMedia\n                    component=\"img\"\n                    alt={areas[3].name}\n                    sx={{ padding: \"0\", width: \"40px\", objectFit: \"contain\", marginRight: \"10px\" }}\n                    image={require(`../../../public/images/${areas[3].image}`)}\n                  />\n                  <Typography\n                    variant=\"body1\"\n                    align=\"center\"\n                    sx={{\n                      background: \"rgba(255, 255, 255, .5)\",\n                      padding: \"2px\",\n                      lineHeight: 2,\n                      alignContent: \"center\",\n                      width: \"150px\",\n                    }}\n                  >\n                    {areas[3].name}\n                  </Typography>\n                                    </Container>\n                                   <CardMedia\n                                      component=\"img\"\n                                      alt={`${areas[3].name} area map`}\n                                      sx={{ padding: \"0\", width: \"300px\", objectFit: \"contain\", marginRight: \"10px\" }}\n                                      image={require(`./archway.png`)}\n                                    />\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    background: \"rgba(123, 104, 255, 1)\",\n                  }}\n                >\n                                <Container sx={{\n                                    display: \"flex\",\n                                    flexDirection: \"row\",\n                                    background: \"rgba(123, 104, 255, 1)\",\n                                }}>\n                  <CardMedia\n                    component=\"img\"\n                    alt={areas[4].name}\n                    sx={{ padding: \"0\", width: \"40px\", objectFit: \"contain\", marginRight: \"10px\" }}\n                    image={require(`../../../public/images/${areas[4].image}`)}\n                  />\n                  <Typography\n                    variant=\"body1\"\n                    align=\"center\"\n                    sx={{\n                      background: \"rgba(255, 255, 255, .5)\",\n                      padding: \"2px\",\n                      lineHeight: 2,\n                      alignContent: \"center\",\n                      width: \"150px\",\n                    }}\n                  >\n                    {areas[4].name}\n                  </Typography>\n                                    </Container>\n                                   <CardMedia\n                                      component=\"img\"\n                                      alt={`${areas[4].name} area map`}\n                                      sx={{ padding: \"0\", width: \"300px\", objectFit: \"contain\", marginRight: \"10px\" }}\n                                      image={require(`./den.png`)}\n                                    />\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    background: \"rgba(145, 126, 171, 1)\",\n                  }}\n                >\n                                <Container sx={{\n                                    display: \"flex\",\n                                    flexDirection: \"row\",\n                                    background: \"rgba(145, 126, 171, 1)\",\n                                }}>\n                  <CardMedia\n                    component=\"img\"\n                    alt={areas[5].name}\n                    sx={{ padding: \"0\", width: \"40px\", objectFit: \"contain\", marginRight: \"10px\" }}\n                    image={require(`../../../public/images/${areas[5].image}`)}\n                  />\n                  <Typography\n                    variant=\"body1\"\n                    align=\"center\"\n                    sx={{\n                      background: \"rgba(255, 255, 255, .5)\",\n                      padding: \"2px\",\n                      lineHeight: 2,\n                      alignContent: \"center\",\n                      width: \"150px\",\n                    }}\n                  >\n                    {areas[5].name}\n                  </Typography>\n                                   </Container>\n                                   <CardMedia\n                                      component=\"img\"\n                                      alt={`${areas[5].name} area map`}\n                                      sx={{ padding: \"0\", width: \"300px\", objectFit: \"contain\", marginRight: \"10px\" }}\n                                      image={require(`./digsite.png`)}\n                                    />\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </div>\n\n      {plotsGully.map((plot) => (\n        <Plot key={plot.id} plot={plot}></Plot>\n      ))}\n      {plotsTidepools.map((plot) => (\n        <Plot key={plot.id} plot={plot}></Plot>\n      ))}\n      {plotsConservatory.map((plot) => (\n        <Plot key={plot.id} plot={plot}></Plot>\n      ))}\n      {plotsArchway.map((plot) => (\n        <Plot key={plot.id} plot={plot}></Plot>\n      ))}\n      {plotsDen.map((plot) => (\n        <Plot key={plot.id} plot={plot}></Plot>\n      ))}\n      {plotsDigsite.map((plot) => (\n        <Plot key={plot.id} plot={plot}></Plot>\n      ))}\n      {freeRange.map((plot) => (\n        <FreeRange key={plot.id} plot={plot}></FreeRange>\n      ))}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { Typography } from \"@mui/material\";\n\nconst rowsFruit = [\n  {\n    slime: \"Phosphor\",\n    slimeImage: \"slimes/phosphor.png\",\n    food: \"Cuberry\",\n    foodImage: \"fruits/cuberry.png\",\n  },\n  {\n    slime: \"Honey\",\n    slimeImage: \"slimes/honey.png\",\n    food: \"Mint Mango\",\n    foodImage: \"fruits/mintMango.png\",\n  },\n  {\n    slime: \"Dervish\",\n    slimeImage: \"slimes/dervish.png\",\n    food: \"Prickle Pear\",\n    foodImage: \"fruits/pricklePear.png\",\n  },\n  {\n    slime: \"Batty\",\n    slimeImage: \"slimes/batty.png\",\n    food: \"Pomegranite\",\n    foodImage: \"fruits/pomegranite.png\",\n  },\n  {\n    slime: \"Twin\",\n    slimeImage: \"slimes/twin.png\",\n    food: \"Polaricherry\",\n    foodImage: \"fruits/polaricherry.png\",\n  },\n];\nconst rowsVeggie = [\n  {\n    slime: \"Rock\",\n    slimeImage: \"slimes/rock.png\",\n    food: \"Heart Beat\",\n    foodImage: \"veggies/heartBeat.png\",\n  },\n  {\n    slime: \"Crystal\",\n    slimeImage: \"slimes/crystal.png\",\n    food: \"Odd Onion\",\n    foodImage: \"veggies/oddOnion.png\",\n  },\n  {\n    slime: \"Cotton\",\n    slimeImage: \"slimes/cotton.png\",\n    food: \"Water Lettuce\",\n    foodImage: \"veggies/waterLettuce.png\",\n  },\n];\nconst rowsMeat = [\n  {\n    slime: \"Tabby\",\n    slimeImage: \"slimes/tabby.png\",\n    food: \"Stony Hen\",\n    foodImage: \"meats/stonyHen.png\",\n  },\n  {\n    slime: \"Boom\",\n    slimeImage: \"slimes/boom.png\",\n    food: \"Briar Hen\",\n    foodImage: \"meats/briarHen.png\",\n  },\n  {\n    slime: \"Angler\",\n    slimeImage: \"slimes/angler.png\",\n    food: \"Sea Hen\",\n    foodImage: \"meats/seaHen.png\",\n  },\n  {\n    slime: \"Tangle\",\n    slimeImage: \"slimes/tangle.png\",\n    food: \"Painted Hen\",\n    foodImage: \"meats/paintedHen.png\",\n  },\n  {\n    slime: \"Saber\",\n    slimeImage: \"slimes/saber.png\",\n    food: \"Thundercluck\",\n    foodImage: \"meats/thundercluck.png\",\n  },\n  {\n    slime: \"Sloomber\",\n    slimeImage: \"slimes/sloomber.png\",\n    food: \"Candied Hen\",\n    foodImage: \"meats/candiedHen.png\",\n  },\n  {\n    slime: \"Hunter\",\n    slimeImage: \"slimes/hunter.png\",\n    food: \"Roostro\",\n    foodImage: \"meats/roostro.png\",\n  },\n];\nconst rowsNoFav = [\n  { slime: \"Pink\", slimeImage: \"slimes/pink.png\", food: \"None\", foodImage: \"other/mixed.png\" },\n  { slime: \"Ringtail\", slimeImage: \"slimes/ringtail.png\", food: \"None\", foodImage: \"other/mixed.png\" },\n  { slime: \"Puddle\", slimeImage: \"slimes/puddle.png\", food: \"None\", foodImage: \"other/water.png\" },\n  { slime: \"Fire\", slimeImage: \"slimes/fire.png\", food: \"None\", foodImage: \"other/ash.png\" },\n  {\n    slime: \"Flutter\",\n    slimeImage: \"slimes/flutter.png\",\n    food: \"Moondew Nectar\",\n    foodImage: \"other/moondewNectar.png\",\n  },\n];\n\n\nexport default function FavFoods() {\n  return (\n    <div>\n      <Typography variant=\"body2\" align=\"center\" sx={{\"margin-bottom\": \"10px\"}}>\n        Favorite Foods\n      </Typography>\n      <TableContainer component={Paper} sx={{\"margin-bottom\": \"5px\"}}>\n        <Table size=\"small\" aria-label=\"fav foods table\" sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}>\n          <TableBody>\n            {rowsFruit.map((row) => (\n              <TableRow key={row.slime} sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}>\n                <TableCell>\n                  <img\n                    srcSet={require(`../../../public/images/${row.slimeImage}`)}\n                    src={require(`../../../public/images/${row.slimeImage}`)}\n                    alt={row.slime}\n                    witdh=\"20\"\n                    height=\"20\"\n                  />\n                </TableCell>\n                <TableCell>\n                  <img\n                    srcSet={require(`../../../public/images/${row.foodImage}`)}\n                    src={require(`../../../public/images/${row.foodImage}`)}\n                    alt={row.slime}\n                    witdh=\"20\"\n                    height=\"20\"\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TableContainer component={Paper} sx={{\"margin-bottom\": \"5px\"}}>\n        <Table size=\"small\" aria-label=\"fav foods table\">\n          <TableBody>\n            {rowsVeggie.map((row) => (\n              <TableRow key={row.slime} sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}>\n                <TableCell>\n                  <img\n                    srcSet={require(`../../../public/images/${row.slimeImage}`)}\n                    src={require(`../../../public/images/${row.slimeImage}`)}\n                    alt={row.slime}\n                    witdh=\"20\"\n                    height=\"20\"\n                  />\n                </TableCell>\n                <TableCell>\n                  <img\n                    srcSet={require(`../../../public/images/${row.foodImage}`)}\n                    src={require(`../../../public/images/${row.foodImage}`)}\n                    alt={row.slime}\n                    witdh=\"20\"\n                    height=\"20\"\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TableContainer component={Paper} sx={{\"margin-bottom\": \"5px\"}}>\n        <Table size=\"small\" aria-label=\"fav foods table\">\n          <TableBody>\n            {rowsMeat.map((row) => (\n              <TableRow key={row.slime} sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}>\n                <TableCell>\n                  <img\n                    srcSet={require(`../../../public/images/${row.slimeImage}`)}\n                    src={require(`../../../public/images/${row.slimeImage}`)}\n                    alt={row.slime}\n                    witdh=\"20\"\n                    height=\"20\"\n                  />\n                </TableCell>\n                <TableCell>\n                  <img\n                    srcSet={require(`../../../public/images/${row.foodImage}`)}\n                    src={require(`../../../public/images/${row.foodImage}`)}\n                    alt={row.slime}\n                    witdh=\"20\"\n                    height=\"20\"\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TableContainer component={Paper} sx={{\"margin-bottom\": \"5px\"}}>\n        <Table size=\"small\" aria-label=\"fav foods table\">\n          <TableBody>\n            {rowsNoFav.map((row) => (\n              <TableRow key={row.slime} sx={{display:\"flex\", \"&:last-child td, &:last-child th\": { border: 0 } }}>\n                <TableCell align=\"center\">\n\n                  <img\n                    srcSet={require(`../../../public/images/${row.slimeImage}`)}\n                    src={require(`../../../public/images/${row.slimeImage}`)}\n                    alt={row.slime}\n                    height=\"20\"\n                  />\n                </TableCell>\n                <TableCell align=\"center\" >\n                  <img\n                    srcSet={require(`../../../public/images/${row.foodImage}`)}\n                    src={require(`../../../public/images/${row.foodImage}`)}\n                    alt={row.slime}\n                    height=\"20\"\n                  />{\" \"}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","import * as React from \"react\";\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport Header from \"./components/layout/Header\";\nimport Footer from \"./components/layout/Footer\";\nimport Container from \"@mui/material/Container\";\nimport Planner from \"./components/layout/Planner\";\nimport FavFoods from \"./components/util/FavFoods\";\nimport Divider from \"@mui/material/Divider\";\n\nexport default function SlimeRancher2Planner() {\n  const [mode, setMode] = React.useState(\"light\");\n  const defaultTheme = createTheme({ palette: { mode } });\n\n  const toggleColorMode = () => {\n    setMode((prev) => (prev === \"dark\" ? \"light\" : \"dark\"));\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          minHeight: \"100vh\",\n        }}\n      >\n        <CssBaseline />\n        <Box\n          sx={{\n            position: \"fixed\",\n            top: 0,\n            width: \"100%\",\n            height: \"50px\",\n            zIndex: 1,\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\" ? theme.palette.grey[200] : theme.palette.grey[800],\n          }}\n        >\n          <Header mode={mode} toggleColorMode={toggleColorMode} />\n        </Box>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            minHeight: \"100vh\",\n          }}\n        >\n          <Container\n            sx={{\n              pt: \"60px\",\n              pb: \"85px\",\n              pl: \"0px\",\n              pr:\"0px\",\n              margin: 0,\n              maxHeight: \"100%\",\n                flexGrow:0,\n              alignItems: \"center\",\n              width: \"auto\"\n            }}\n          >\n      <img src={require(`./mapOverview.png`)} alt=\"Slime Rancher 2 Conservatory map\" height=\"790px\"></img>\n          </Container>\n          <Divider orientation=\"vertical\" flexItem />\n          <Container\n            sx={{\n              pt: \"60px\",\n              pb: \"85px\",\n              pl: \"10px\",\n              pr: \"10px\",\n              margin: 0,\n              flexGrow: 1,\n              maxWidth: \"100%\",\n              maxHeight: \"100%\",\n              alignItems: \"center\",\n            }}\n          >\n            <Planner />\n          </Container>\n          <Divider orientation=\"vertical\" flexItem />\n          <Container\nwidth=\"50px\"\n            sx={{ pt: \"60px\", pb: \"85px\", pl: \"10px\", pr: \"10px\", margin: 0, width: \"150px\" }}\n          >\n\n                        <FavFoods />\n                      </Container>\n        </Box>\n\n        <Box\n          sx={{\n            py: 3,\n            px: 2,\n            mt: \"auto\",\n            position: \"fixed\",\n            bottom: 0,\n            width: \"100%\",\n            height: \"85px\",\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\" ? theme.palette.grey[200] : theme.palette.grey[800],\n          }}\n        >\n          <Footer />\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import * as React from \"react\";\nimport \"./index.css\";\nimport SlimeRancher2Planner from \"./SlimeRancher2Planner\";\n\nexport default function App() {\n  return (\n    <div className=\"box\">\n      <SlimeRancher2Planner />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nconst root = ReactDOM.createRoot(rootElement);\n\nroot.render(<App />);"],"sourceRoot":""}